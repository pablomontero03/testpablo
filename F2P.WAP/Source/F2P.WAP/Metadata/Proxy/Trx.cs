//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// Este código fuente fue generado automáticamente por wsdl, Versión=4.0.30319.18020.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "TrxSoap", Namespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/")]
public partial class Trx : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback WriteWSQOperationCompleted;

    private System.Threading.SendOrPostCallback WritePhotoHrefOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Update_commentsbyGpsIDOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Href_GetbyGpsIDOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Add_DPIOperationCompleted;

    private System.Threading.SendOrPostCallback GetPassOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_MediaTypeOperationCompleted;

    private System.Threading.SendOrPostCallback Json_LoadImageOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Add_PNCOperationCompleted;

    private System.Threading.SendOrPostCallback TransImageStrPNCOperationCompleted;

    private System.Threading.SendOrPostCallback Get_DPIOperationCompleted;

    private System.Threading.SendOrPostCallback ezinfoOperationCompleted;

    private System.Threading.SendOrPostCallback chepeTePrestaOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Add_JSONPOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_AddOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Add_XMLOperationCompleted;

    private System.Threading.SendOrPostCallback JsonGPS_ListOperationCompleted;

    private System.Threading.SendOrPostCallback JsonGPS_ListsOperationCompleted;

    private System.Threading.SendOrPostCallback GetPasswordOperationCompleted;

    private System.Threading.SendOrPostCallback JsonBuro_ListOperationCompleted;

    private System.Threading.SendOrPostCallback Buro_List_With_FileOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Add_FinsolOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Add_Finsol_GetLastRowOperationCompleted;

    private System.Threading.SendOrPostCallback Buro_Return_JsonXmlOperationCompleted;

    private System.Threading.SendOrPostCallback JsonGet_RolesOperationCompleted;

    private System.Threading.SendOrPostCallback JsonGet_Get_ProfileOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Get_AgendaPlanOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Get_AgendaPlanPagesOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Update_AgendaPlanOperationCompleted;

    private System.Threading.SendOrPostCallback Json_AddTasks_UpdatePlanOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Count_AgendaPlanOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Get_TasksOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Tasks_UpdateOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Tasks_GetOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Update_TasksOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Get_CodeConversionOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Get_OCROperationCompleted;

    private System.Threading.SendOrPostCallback Json_Update_Tasks_BuroOperationCompleted;

    private System.Threading.SendOrPostCallback TransReadImageBase64OperationCompleted;

    private System.Threading.SendOrPostCallback TransReadImageOperationCompleted;

    private System.Threading.SendOrPostCallback TransImageLocalOperationCompleted;

    private System.Threading.SendOrPostCallback TransImageParOperationCompleted;

    private System.Threading.SendOrPostCallback TransImageStrOperationCompleted;

    private System.Threading.SendOrPostCallback TransImagebyteOperationCompleted;

    private System.Threading.SendOrPostCallback TransImageOperationCompleted;

    private System.Threading.SendOrPostCallback TransImageTypeOperationCompleted;

    private System.Threading.SendOrPostCallback Get_Last_Added_userGPSOperationCompleted;

    private System.Threading.SendOrPostCallback ListJPGOperationCompleted;

    private System.Threading.SendOrPostCallback SendMailEquifaxOperationCompleted;

    private System.Threading.SendOrPostCallback SendMailOperationCompleted;

    private System.Threading.SendOrPostCallback JsonTransUnionOperationCompleted;

    private System.Threading.SendOrPostCallback Get_Roles_AgendaOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Get_Roles_AgendaOperationCompleted;

    private System.Threading.SendOrPostCallback generateJSONBuroOperationCompleted;

    private System.Threading.SendOrPostCallback CreateBuroFileOperationCompleted;

    private System.Threading.SendOrPostCallback Json_OpenBuroFileOperationCompleted;

    private System.Threading.SendOrPostCallback OpenBuroFileOperationCompleted;

    private System.Threading.SendOrPostCallback Json_Update_Tasks_CommentsOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Add_PhotosOperationCompleted;

    private System.Threading.SendOrPostCallback ReadPictureOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Add_WSQOperationCompleted;

    private System.Threading.SendOrPostCallback GPS_Add_WSQ_FingersLROperationCompleted;

    /// <remarks/>
    public Trx()
    {
        this.Url = "http://www.prismsc.net/desktopmodules/ezmovilJsonp/ezmovilJsonp.asmx";
    }

    /// <remarks/>
    public event WriteWSQCompletedEventHandler WriteWSQCompleted;

    /// <remarks/>
    public event WritePhotoHrefCompletedEventHandler WritePhotoHrefCompleted;

    /// <remarks/>
    public event GPS_Update_commentsbyGpsIDCompletedEventHandler GPS_Update_commentsbyGpsIDCompleted;

    /// <remarks/>
    public event GPS_Href_GetbyGpsIDCompletedEventHandler GPS_Href_GetbyGpsIDCompleted;

    /// <remarks/>
    public event GPS_Add_DPICompletedEventHandler GPS_Add_DPICompleted;

    /// <remarks/>
    public event GetPassCompletedEventHandler GetPassCompleted;

    /// <remarks/>
    public event GPS_MediaTypeCompletedEventHandler GPS_MediaTypeCompleted;

    /// <remarks/>
    public event Json_LoadImageCompletedEventHandler Json_LoadImageCompleted;

    /// <remarks/>
    public event GPS_Add_PNCCompletedEventHandler GPS_Add_PNCCompleted;

    /// <remarks/>
    public event TransImageStrPNCCompletedEventHandler TransImageStrPNCCompleted;

    /// <remarks/>
    public event Get_DPICompletedEventHandler Get_DPICompleted;

    /// <remarks/>
    public event ezinfoCompletedEventHandler ezinfoCompleted;

    /// <remarks/>
    public event chepeTePrestaCompletedEventHandler chepeTePrestaCompleted;

    /// <remarks/>
    public event GPS_Add_JSONPCompletedEventHandler GPS_Add_JSONPCompleted;

    /// <remarks/>
    public event GPS_AddCompletedEventHandler GPS_AddCompleted;

    /// <remarks/>
    public event GPS_Add_XMLCompletedEventHandler GPS_Add_XMLCompleted;

    /// <remarks/>
    public event JsonGPS_ListCompletedEventHandler JsonGPS_ListCompleted;

    /// <remarks/>
    public event JsonGPS_ListsCompletedEventHandler JsonGPS_ListsCompleted;

    /// <remarks/>
    public event GetPasswordCompletedEventHandler GetPasswordCompleted;

    /// <remarks/>
    public event JsonBuro_ListCompletedEventHandler JsonBuro_ListCompleted;

    /// <remarks/>
    public event Buro_List_With_FileCompletedEventHandler Buro_List_With_FileCompleted;

    /// <remarks/>
    public event GPS_Add_FinsolCompletedEventHandler GPS_Add_FinsolCompleted;

    /// <remarks/>
    public event GPS_Add_Finsol_GetLastRowCompletedEventHandler GPS_Add_Finsol_GetLastRowCompleted;

    /// <remarks/>
    public event Buro_Return_JsonXmlCompletedEventHandler Buro_Return_JsonXmlCompleted;

    /// <remarks/>
    public event JsonGet_RolesCompletedEventHandler JsonGet_RolesCompleted;

    /// <remarks/>
    public event JsonGet_Get_ProfileCompletedEventHandler JsonGet_Get_ProfileCompleted;

    /// <remarks/>
    public event Json_Get_AgendaPlanCompletedEventHandler Json_Get_AgendaPlanCompleted;

    /// <remarks/>
    public event Json_Get_AgendaPlanPagesCompletedEventHandler Json_Get_AgendaPlanPagesCompleted;

    /// <remarks/>
    public event Json_Update_AgendaPlanCompletedEventHandler Json_Update_AgendaPlanCompleted;

    /// <remarks/>
    public event Json_AddTasks_UpdatePlanCompletedEventHandler Json_AddTasks_UpdatePlanCompleted;

    /// <remarks/>
    public event Json_Count_AgendaPlanCompletedEventHandler Json_Count_AgendaPlanCompleted;

    /// <remarks/>
    public event Json_Get_TasksCompletedEventHandler Json_Get_TasksCompleted;

    /// <remarks/>
    public event Json_Tasks_UpdateCompletedEventHandler Json_Tasks_UpdateCompleted;

    /// <remarks/>
    public event Json_Tasks_GetCompletedEventHandler Json_Tasks_GetCompleted;

    /// <remarks/>
    public event Json_Update_TasksCompletedEventHandler Json_Update_TasksCompleted;

    /// <remarks/>
    public event Json_Get_CodeConversionCompletedEventHandler Json_Get_CodeConversionCompleted;

    /// <remarks/>
    public event Json_Get_OCRCompletedEventHandler Json_Get_OCRCompleted;

    /// <remarks/>
    public event Json_Update_Tasks_BuroCompletedEventHandler Json_Update_Tasks_BuroCompleted;

    /// <remarks/>
    public event TransReadImageBase64CompletedEventHandler TransReadImageBase64Completed;

    /// <remarks/>
    public event TransReadImageCompletedEventHandler TransReadImageCompleted;

    /// <remarks/>
    public event TransImageLocalCompletedEventHandler TransImageLocalCompleted;

    /// <remarks/>
    public event TransImageParCompletedEventHandler TransImageParCompleted;

    /// <remarks/>
    public event TransImageStrCompletedEventHandler TransImageStrCompleted;

    /// <remarks/>
    public event TransImagebyteCompletedEventHandler TransImagebyteCompleted;

    /// <remarks/>
    public event TransImageCompletedEventHandler TransImageCompleted;

    /// <remarks/>
    public event TransImageTypeCompletedEventHandler TransImageTypeCompleted;

    /// <remarks/>
    public event Get_Last_Added_userGPSCompletedEventHandler Get_Last_Added_userGPSCompleted;

    /// <remarks/>
    public event ListJPGCompletedEventHandler ListJPGCompleted;

    /// <remarks/>
    public event SendMailEquifaxCompletedEventHandler SendMailEquifaxCompleted;

    /// <remarks/>
    public event SendMailCompletedEventHandler SendMailCompleted;

    /// <remarks/>
    public event JsonTransUnionCompletedEventHandler JsonTransUnionCompleted;

    /// <remarks/>
    public event Get_Roles_AgendaCompletedEventHandler Get_Roles_AgendaCompleted;

    /// <remarks/>
    public event Json_Get_Roles_AgendaCompletedEventHandler Json_Get_Roles_AgendaCompleted;

    /// <remarks/>
    public event generateJSONBuroCompletedEventHandler generateJSONBuroCompleted;

    /// <remarks/>
    public event CreateBuroFileCompletedEventHandler CreateBuroFileCompleted;

    /// <remarks/>
    public event Json_OpenBuroFileCompletedEventHandler Json_OpenBuroFileCompleted;

    /// <remarks/>
    public event OpenBuroFileCompletedEventHandler OpenBuroFileCompleted;

    /// <remarks/>
    public event Json_Update_Tasks_CommentsCompletedEventHandler Json_Update_Tasks_CommentsCompleted;

    /// <remarks/>
    public event GPS_Add_PhotosCompletedEventHandler GPS_Add_PhotosCompleted;

    /// <remarks/>
    public event ReadPictureCompletedEventHandler ReadPictureCompleted;

    /// <remarks/>
    public event GPS_Add_WSQCompletedEventHandler GPS_Add_WSQCompleted;

    /// <remarks/>
    public event GPS_Add_WSQ_FingersLRCompletedEventHandler GPS_Add_WSQ_FingersLRCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/WriteWSQ", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string WriteWSQ(string portalid, string userGPS, string gpsID, string base64, string directory, string photopathID)
    {
        object[] results = this.Invoke("WriteWSQ", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory,
                    photopathID});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginWriteWSQ(string portalid, string userGPS, string gpsID, string base64, string directory, string photopathID, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("WriteWSQ", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory,
                    photopathID}, callback, asyncState);
    }

    /// <remarks/>
    public string EndWriteWSQ(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void WriteWSQAsync(string portalid, string userGPS, string gpsID, string base64, string directory, string photopathID)
    {
        this.WriteWSQAsync(portalid, userGPS, gpsID, base64, directory, photopathID, null);
    }

    /// <remarks/>
    public void WriteWSQAsync(string portalid, string userGPS, string gpsID, string base64, string directory, string photopathID, object userState)
    {
        if ((this.WriteWSQOperationCompleted == null))
        {
            this.WriteWSQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteWSQOperationCompleted);
        }
        this.InvokeAsync("WriteWSQ", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory,
                    photopathID}, this.WriteWSQOperationCompleted, userState);
    }

    private void OnWriteWSQOperationCompleted(object arg)
    {
        if ((this.WriteWSQCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.WriteWSQCompleted(this, new WriteWSQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/WritePhotoHref", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string WritePhotoHref(string portalid, string photopathID, string href)
    {
        object[] results = this.Invoke("WritePhotoHref", new object[] {
                    portalid,
                    photopathID,
                    href});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginWritePhotoHref(string portalid, string photopathID, string href, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("WritePhotoHref", new object[] {
                    portalid,
                    photopathID,
                    href}, callback, asyncState);
    }

    /// <remarks/>
    public string EndWritePhotoHref(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void WritePhotoHrefAsync(string portalid, string photopathID, string href)
    {
        this.WritePhotoHrefAsync(portalid, photopathID, href, null);
    }

    /// <remarks/>
    public void WritePhotoHrefAsync(string portalid, string photopathID, string href, object userState)
    {
        if ((this.WritePhotoHrefOperationCompleted == null))
        {
            this.WritePhotoHrefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWritePhotoHrefOperationCompleted);
        }
        this.InvokeAsync("WritePhotoHref", new object[] {
                    portalid,
                    photopathID,
                    href}, this.WritePhotoHrefOperationCompleted, userState);
    }

    private void OnWritePhotoHrefOperationCompleted(object arg)
    {
        if ((this.WritePhotoHrefCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.WritePhotoHrefCompleted(this, new WritePhotoHrefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Update_commentsbyGpsID", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void GPS_Update_commentsbyGpsID(int portalid, int gpsid, string comments, int id)
    {
        this.Invoke("GPS_Update_commentsbyGpsID", new object[] {
                    portalid,
                    gpsid,
                    comments,
                    id});
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Update_commentsbyGpsID(int portalid, int gpsid, string comments, int id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Update_commentsbyGpsID", new object[] {
                    portalid,
                    gpsid,
                    comments,
                    id}, callback, asyncState);
    }

    /// <remarks/>
    public void EndGPS_Update_commentsbyGpsID(System.IAsyncResult asyncResult)
    {
        this.EndInvoke(asyncResult);
    }

    /// <remarks/>
    public void GPS_Update_commentsbyGpsIDAsync(int portalid, int gpsid, string comments, int id)
    {
        this.GPS_Update_commentsbyGpsIDAsync(portalid, gpsid, comments, id, null);
    }

    /// <remarks/>
    public void GPS_Update_commentsbyGpsIDAsync(int portalid, int gpsid, string comments, int id, object userState)
    {
        if ((this.GPS_Update_commentsbyGpsIDOperationCompleted == null))
        {
            this.GPS_Update_commentsbyGpsIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Update_commentsbyGpsIDOperationCompleted);
        }
        this.InvokeAsync("GPS_Update_commentsbyGpsID", new object[] {
                    portalid,
                    gpsid,
                    comments,
                    id}, this.GPS_Update_commentsbyGpsIDOperationCompleted, userState);
    }

    private void OnGPS_Update_commentsbyGpsIDOperationCompleted(object arg)
    {
        if ((this.GPS_Update_commentsbyGpsIDCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Update_commentsbyGpsIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Href_GetbyGpsID", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Href_GetbyGpsID(int portalid, int gpsid)
    {
        object[] results = this.Invoke("GPS_Href_GetbyGpsID", new object[] {
                    portalid,
                    gpsid});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Href_GetbyGpsID(int portalid, int gpsid, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Href_GetbyGpsID", new object[] {
                    portalid,
                    gpsid}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Href_GetbyGpsID(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_Href_GetbyGpsIDAsync(int portalid, int gpsid)
    {
        this.GPS_Href_GetbyGpsIDAsync(portalid, gpsid, null);
    }

    /// <remarks/>
    public void GPS_Href_GetbyGpsIDAsync(int portalid, int gpsid, object userState)
    {
        if ((this.GPS_Href_GetbyGpsIDOperationCompleted == null))
        {
            this.GPS_Href_GetbyGpsIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Href_GetbyGpsIDOperationCompleted);
        }
        this.InvokeAsync("GPS_Href_GetbyGpsID", new object[] {
                    portalid,
                    gpsid}, this.GPS_Href_GetbyGpsIDOperationCompleted, userState);
    }

    private void OnGPS_Href_GetbyGpsIDOperationCompleted(object arg)
    {
        if ((this.GPS_Href_GetbyGpsIDCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Href_GetbyGpsIDCompleted(this, new GPS_Href_GetbyGpsIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Add_DPI", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Add_DPI(string portalid, string userGPS, string longitude, string latitude, string barcode, string base64, string directory, string cui, string nombres, string apellidos, string nacimiento, string status)
    {
        object[] results = this.Invoke("GPS_Add_DPI", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    base64,
                    directory,
                    cui,
                    nombres,
                    apellidos,
                    nacimiento,
                    status});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Add_DPI(string portalid, string userGPS, string longitude, string latitude, string barcode, string base64, string directory, string cui, string nombres, string apellidos, string nacimiento, string status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Add_DPI", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    base64,
                    directory,
                    cui,
                    nombres,
                    apellidos,
                    nacimiento,
                    status}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Add_DPI(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_Add_DPIAsync(string portalid, string userGPS, string longitude, string latitude, string barcode, string base64, string directory, string cui, string nombres, string apellidos, string nacimiento, string status)
    {
        this.GPS_Add_DPIAsync(portalid, userGPS, longitude, latitude, barcode, base64, directory, cui, nombres, apellidos, nacimiento, status, null);
    }

    /// <remarks/>
    public void GPS_Add_DPIAsync(string portalid, string userGPS, string longitude, string latitude, string barcode, string base64, string directory, string cui, string nombres, string apellidos, string nacimiento, string status, object userState)
    {
        if ((this.GPS_Add_DPIOperationCompleted == null))
        {
            this.GPS_Add_DPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Add_DPIOperationCompleted);
        }
        this.InvokeAsync("GPS_Add_DPI", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    base64,
                    directory,
                    cui,
                    nombres,
                    apellidos,
                    nacimiento,
                    status}, this.GPS_Add_DPIOperationCompleted, userState);
    }

    private void OnGPS_Add_DPIOperationCompleted(object arg)
    {
        if ((this.GPS_Add_DPICompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Add_DPICompleted(this, new GPS_Add_DPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GetPass", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetPass(string portalID, string luser)
    {
        object[] results = this.Invoke("GetPass", new object[] {
                    portalID,
                    luser});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetPass(string portalID, string luser, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetPass", new object[] {
                    portalID,
                    luser}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGetPass(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GetPassAsync(string portalID, string luser)
    {
        this.GetPassAsync(portalID, luser, null);
    }

    /// <remarks/>
    public void GetPassAsync(string portalID, string luser, object userState)
    {
        if ((this.GetPassOperationCompleted == null))
        {
            this.GetPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPassOperationCompleted);
        }
        this.InvokeAsync("GetPass", new object[] {
                    portalID,
                    luser}, this.GetPassOperationCompleted, userState);
    }

    private void OnGetPassOperationCompleted(object arg)
    {
        if ((this.GetPassCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPassCompleted(this, new GetPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_MediaType", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_MediaType(string portalid, string userGPS, string longitude, string latitude, string barcode, string base64, string directory, string comments, string status, string mediaType)
    {
        object[] results = this.Invoke("GPS_MediaType", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    base64,
                    directory,
                    comments,
                    status,
                    mediaType});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_MediaType(string portalid, string userGPS, string longitude, string latitude, string barcode, string base64, string directory, string comments, string status, string mediaType, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_MediaType", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    base64,
                    directory,
                    comments,
                    status,
                    mediaType}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_MediaType(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_MediaTypeAsync(string portalid, string userGPS, string longitude, string latitude, string barcode, string base64, string directory, string comments, string status, string mediaType)
    {
        this.GPS_MediaTypeAsync(portalid, userGPS, longitude, latitude, barcode, base64, directory, comments, status, mediaType, null);
    }

    /// <remarks/>
    public void GPS_MediaTypeAsync(string portalid, string userGPS, string longitude, string latitude, string barcode, string base64, string directory, string comments, string status, string mediaType, object userState)
    {
        if ((this.GPS_MediaTypeOperationCompleted == null))
        {
            this.GPS_MediaTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_MediaTypeOperationCompleted);
        }
        this.InvokeAsync("GPS_MediaType", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    base64,
                    directory,
                    comments,
                    status,
                    mediaType}, this.GPS_MediaTypeOperationCompleted, userState);
    }

    private void OnGPS_MediaTypeOperationCompleted(object arg)
    {
        if ((this.GPS_MediaTypeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_MediaTypeCompleted(this, new GPS_MediaTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_LoadImage", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_LoadImage(string portalid, string search, string criteria, string group)
    {
        object[] results = this.Invoke("Json_LoadImage", new object[] {
                    portalid,
                    search,
                    criteria,
                    group});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_LoadImage(string portalid, string search, string criteria, string group, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_LoadImage", new object[] {
                    portalid,
                    search,
                    criteria,
                    group}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_LoadImage(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_LoadImageAsync(string portalid, string search, string criteria, string group)
    {
        this.Json_LoadImageAsync(portalid, search, criteria, group, null);
    }

    /// <remarks/>
    public void Json_LoadImageAsync(string portalid, string search, string criteria, string group, object userState)
    {
        if ((this.Json_LoadImageOperationCompleted == null))
        {
            this.Json_LoadImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_LoadImageOperationCompleted);
        }
        this.InvokeAsync("Json_LoadImage", new object[] {
                    portalid,
                    search,
                    criteria,
                    group}, this.Json_LoadImageOperationCompleted, userState);
    }

    private void OnJson_LoadImageOperationCompleted(object arg)
    {
        if ((this.Json_LoadImageCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_LoadImageCompleted(this, new Json_LoadImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Add_PNC", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Add_PNC(
                string portalid,
                string userGPS,
                string longitude,
                string latitude,
                string barcode,
                string base64,
                string directory,
                string comprobante,
                string cui,
                string nombres,
                string apellidos,
                string cverificacion,
                string url,
                string tiene,
                string extendido,
                string recepcion,
                string firmaNombre,
                string firmaImg,
                string status)
    {
        object[] results = this.Invoke("GPS_Add_PNC", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    base64,
                    directory,
                    comprobante,
                    cui,
                    nombres,
                    apellidos,
                    cverificacion,
                    url,
                    tiene,
                    extendido,
                    recepcion,
                    firmaNombre,
                    firmaImg,
                    status});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Add_PNC(
                string portalid,
                string userGPS,
                string longitude,
                string latitude,
                string barcode,
                string base64,
                string directory,
                string comprobante,
                string cui,
                string nombres,
                string apellidos,
                string cverificacion,
                string url,
                string tiene,
                string extendido,
                string recepcion,
                string firmaNombre,
                string firmaImg,
                string status,
                System.AsyncCallback callback,
                object asyncState)
    {
        return this.BeginInvoke("GPS_Add_PNC", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    base64,
                    directory,
                    comprobante,
                    cui,
                    nombres,
                    apellidos,
                    cverificacion,
                    url,
                    tiene,
                    extendido,
                    recepcion,
                    firmaNombre,
                    firmaImg,
                    status}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Add_PNC(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_Add_PNCAsync(
                string portalid,
                string userGPS,
                string longitude,
                string latitude,
                string barcode,
                string base64,
                string directory,
                string comprobante,
                string cui,
                string nombres,
                string apellidos,
                string cverificacion,
                string url,
                string tiene,
                string extendido,
                string recepcion,
                string firmaNombre,
                string firmaImg,
                string status)
    {
        this.GPS_Add_PNCAsync(portalid, userGPS, longitude, latitude, barcode, base64, directory, comprobante, cui, nombres, apellidos, cverificacion, url, tiene, extendido, recepcion, firmaNombre, firmaImg, status, null);
    }

    /// <remarks/>
    public void GPS_Add_PNCAsync(
                string portalid,
                string userGPS,
                string longitude,
                string latitude,
                string barcode,
                string base64,
                string directory,
                string comprobante,
                string cui,
                string nombres,
                string apellidos,
                string cverificacion,
                string url,
                string tiene,
                string extendido,
                string recepcion,
                string firmaNombre,
                string firmaImg,
                string status,
                object userState)
    {
        if ((this.GPS_Add_PNCOperationCompleted == null))
        {
            this.GPS_Add_PNCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Add_PNCOperationCompleted);
        }
        this.InvokeAsync("GPS_Add_PNC", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    base64,
                    directory,
                    comprobante,
                    cui,
                    nombres,
                    apellidos,
                    cverificacion,
                    url,
                    tiene,
                    extendido,
                    recepcion,
                    firmaNombre,
                    firmaImg,
                    status}, this.GPS_Add_PNCOperationCompleted, userState);
    }

    private void OnGPS_Add_PNCOperationCompleted(object arg)
    {
        if ((this.GPS_Add_PNCCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Add_PNCCompleted(this, new GPS_Add_PNCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/TransImageStrPNC", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TransImageStrPNC(
                string portalid,
                string userGPS,
                string gpsID,
                string base64,
                string directory,
                string comprobante,
                string cui,
                string nombres,
                string apellidos,
                string cverificacion,
                string url,
                string tiene,
                string extendido,
                string recepcion,
                string firmaNombre,
                string firmaImg)
    {
        object[] results = this.Invoke("TransImageStrPNC", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory,
                    comprobante,
                    cui,
                    nombres,
                    apellidos,
                    cverificacion,
                    url,
                    tiene,
                    extendido,
                    recepcion,
                    firmaNombre,
                    firmaImg});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTransImageStrPNC(
                string portalid,
                string userGPS,
                string gpsID,
                string base64,
                string directory,
                string comprobante,
                string cui,
                string nombres,
                string apellidos,
                string cverificacion,
                string url,
                string tiene,
                string extendido,
                string recepcion,
                string firmaNombre,
                string firmaImg,
                System.AsyncCallback callback,
                object asyncState)
    {
        return this.BeginInvoke("TransImageStrPNC", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory,
                    comprobante,
                    cui,
                    nombres,
                    apellidos,
                    cverificacion,
                    url,
                    tiene,
                    extendido,
                    recepcion,
                    firmaNombre,
                    firmaImg}, callback, asyncState);
    }

    /// <remarks/>
    public string EndTransImageStrPNC(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void TransImageStrPNCAsync(
                string portalid,
                string userGPS,
                string gpsID,
                string base64,
                string directory,
                string comprobante,
                string cui,
                string nombres,
                string apellidos,
                string cverificacion,
                string url,
                string tiene,
                string extendido,
                string recepcion,
                string firmaNombre,
                string firmaImg)
    {
        this.TransImageStrPNCAsync(portalid, userGPS, gpsID, base64, directory, comprobante, cui, nombres, apellidos, cverificacion, url, tiene, extendido, recepcion, firmaNombre, firmaImg, null);
    }

    /// <remarks/>
    public void TransImageStrPNCAsync(
                string portalid,
                string userGPS,
                string gpsID,
                string base64,
                string directory,
                string comprobante,
                string cui,
                string nombres,
                string apellidos,
                string cverificacion,
                string url,
                string tiene,
                string extendido,
                string recepcion,
                string firmaNombre,
                string firmaImg,
                object userState)
    {
        if ((this.TransImageStrPNCOperationCompleted == null))
        {
            this.TransImageStrPNCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransImageStrPNCOperationCompleted);
        }
        this.InvokeAsync("TransImageStrPNC", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory,
                    comprobante,
                    cui,
                    nombres,
                    apellidos,
                    cverificacion,
                    url,
                    tiene,
                    extendido,
                    recepcion,
                    firmaNombre,
                    firmaImg}, this.TransImageStrPNCOperationCompleted, userState);
    }

    private void OnTransImageStrPNCOperationCompleted(object arg)
    {
        if ((this.TransImageStrPNCCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransImageStrPNCCompleted(this, new TransImageStrPNCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Get_DPI", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode Get_DPI(int portalid, string actividad, string status)
    {
        object[] results = this.Invoke("Get_DPI", new object[] {
                    portalid,
                    actividad,
                    status});
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGet_DPI(int portalid, string actividad, string status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Get_DPI", new object[] {
                    portalid,
                    actividad,
                    status}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGet_DPI(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void Get_DPIAsync(int portalid, string actividad, string status)
    {
        this.Get_DPIAsync(portalid, actividad, status, null);
    }

    /// <remarks/>
    public void Get_DPIAsync(int portalid, string actividad, string status, object userState)
    {
        if ((this.Get_DPIOperationCompleted == null))
        {
            this.Get_DPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_DPIOperationCompleted);
        }
        this.InvokeAsync("Get_DPI", new object[] {
                    portalid,
                    actividad,
                    status}, this.Get_DPIOperationCompleted, userState);
    }

    private void OnGet_DPIOperationCompleted(object arg)
    {
        if ((this.Get_DPICompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Get_DPICompleted(this, new Get_DPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/ezinfo", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ezinfo(string portalid, string userid, string cui)
    {
        object[] results = this.Invoke("ezinfo", new object[] {
                    portalid,
                    userid,
                    cui});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult Beginezinfo(string portalid, string userid, string cui, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("ezinfo", new object[] {
                    portalid,
                    userid,
                    cui}, callback, asyncState);
    }

    /// <remarks/>
    public string Endezinfo(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void ezinfoAsync(string portalid, string userid, string cui)
    {
        this.ezinfoAsync(portalid, userid, cui, null);
    }

    /// <remarks/>
    public void ezinfoAsync(string portalid, string userid, string cui, object userState)
    {
        if ((this.ezinfoOperationCompleted == null))
        {
            this.ezinfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnezinfoOperationCompleted);
        }
        this.InvokeAsync("ezinfo", new object[] {
                    portalid,
                    userid,
                    cui}, this.ezinfoOperationCompleted, userState);
    }

    private void OnezinfoOperationCompleted(object arg)
    {
        if ((this.ezinfoCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ezinfoCompleted(this, new ezinfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/chepeTePresta", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string chepeTePresta(string portalid, string userid, string cui)
    {
        object[] results = this.Invoke("chepeTePresta", new object[] {
                    portalid,
                    userid,
                    cui});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginchepeTePresta(string portalid, string userid, string cui, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("chepeTePresta", new object[] {
                    portalid,
                    userid,
                    cui}, callback, asyncState);
    }

    /// <remarks/>
    public string EndchepeTePresta(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void chepeTePrestaAsync(string portalid, string userid, string cui)
    {
        this.chepeTePrestaAsync(portalid, userid, cui, null);
    }

    /// <remarks/>
    public void chepeTePrestaAsync(string portalid, string userid, string cui, object userState)
    {
        if ((this.chepeTePrestaOperationCompleted == null))
        {
            this.chepeTePrestaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchepeTePrestaOperationCompleted);
        }
        this.InvokeAsync("chepeTePresta", new object[] {
                    portalid,
                    userid,
                    cui}, this.chepeTePrestaOperationCompleted, userState);
    }

    private void OnchepeTePrestaOperationCompleted(object arg)
    {
        if ((this.chepeTePrestaCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.chepeTePrestaCompleted(this, new chepeTePrestaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Add_JSONP", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Add_JSONP(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments)
    {
        object[] results = this.Invoke("GPS_Add_JSONP", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Add_JSONP(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Add_JSONP", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Add_JSONP(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_Add_JSONPAsync(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments)
    {
        this.GPS_Add_JSONPAsync(portalid, moduleid, userGPS, id, date, barcode, actividad, longitude, latitude, startdate, enddate, comments, null);
    }

    /// <remarks/>
    public void GPS_Add_JSONPAsync(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments, object userState)
    {
        if ((this.GPS_Add_JSONPOperationCompleted == null))
        {
            this.GPS_Add_JSONPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Add_JSONPOperationCompleted);
        }
        this.InvokeAsync("GPS_Add_JSONP", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments}, this.GPS_Add_JSONPOperationCompleted, userState);
    }

    private void OnGPS_Add_JSONPOperationCompleted(object arg)
    {
        if ((this.GPS_Add_JSONPCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Add_JSONPCompleted(this, new GPS_Add_JSONPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Add", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Add(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments)
    {
        object[] results = this.Invoke("GPS_Add", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Add(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Add", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Add(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_AddAsync(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments)
    {
        this.GPS_AddAsync(portalid, moduleid, userGPS, id, date, barcode, actividad, longitude, latitude, startdate, enddate, comments, null);
    }

    /// <remarks/>
    public void GPS_AddAsync(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments, object userState)
    {
        if ((this.GPS_AddOperationCompleted == null))
        {
            this.GPS_AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_AddOperationCompleted);
        }
        this.InvokeAsync("GPS_Add", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments}, this.GPS_AddOperationCompleted, userState);
    }

    private void OnGPS_AddOperationCompleted(object arg)
    {
        if ((this.GPS_AddCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_AddCompleted(this, new GPS_AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Add_XML", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Add_XML(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments)
    {
        object[] results = this.Invoke("GPS_Add_XML", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Add_XML(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Add_XML", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Add_XML(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_Add_XMLAsync(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments)
    {
        this.GPS_Add_XMLAsync(portalid, moduleid, userGPS, id, date, barcode, actividad, longitude, latitude, startdate, enddate, comments, null);
    }

    /// <remarks/>
    public void GPS_Add_XMLAsync(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments, object userState)
    {
        if ((this.GPS_Add_XMLOperationCompleted == null))
        {
            this.GPS_Add_XMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Add_XMLOperationCompleted);
        }
        this.InvokeAsync("GPS_Add_XML", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments}, this.GPS_Add_XMLOperationCompleted, userState);
    }

    private void OnGPS_Add_XMLOperationCompleted(object arg)
    {
        if ((this.GPS_Add_XMLCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Add_XMLCompleted(this, new GPS_Add_XMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/JsonGPS_List", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string JsonGPS_List(int portalid, string search, string criteria)
    {
        object[] results = this.Invoke("JsonGPS_List", new object[] {
                    portalid,
                    search,
                    criteria});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJsonGPS_List(int portalid, string search, string criteria, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("JsonGPS_List", new object[] {
                    portalid,
                    search,
                    criteria}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJsonGPS_List(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void JsonGPS_ListAsync(int portalid, string search, string criteria)
    {
        this.JsonGPS_ListAsync(portalid, search, criteria, null);
    }

    /// <remarks/>
    public void JsonGPS_ListAsync(int portalid, string search, string criteria, object userState)
    {
        if ((this.JsonGPS_ListOperationCompleted == null))
        {
            this.JsonGPS_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJsonGPS_ListOperationCompleted);
        }
        this.InvokeAsync("JsonGPS_List", new object[] {
                    portalid,
                    search,
                    criteria}, this.JsonGPS_ListOperationCompleted, userState);
    }

    private void OnJsonGPS_ListOperationCompleted(object arg)
    {
        if ((this.JsonGPS_ListCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.JsonGPS_ListCompleted(this, new JsonGPS_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/JsonGPS_Lists", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string JsonGPS_Lists(int portalid, string search, string criteria, string criteria1)
    {
        object[] results = this.Invoke("JsonGPS_Lists", new object[] {
                    portalid,
                    search,
                    criteria,
                    criteria1});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJsonGPS_Lists(int portalid, string search, string criteria, string criteria1, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("JsonGPS_Lists", new object[] {
                    portalid,
                    search,
                    criteria,
                    criteria1}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJsonGPS_Lists(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void JsonGPS_ListsAsync(int portalid, string search, string criteria, string criteria1)
    {
        this.JsonGPS_ListsAsync(portalid, search, criteria, criteria1, null);
    }

    /// <remarks/>
    public void JsonGPS_ListsAsync(int portalid, string search, string criteria, string criteria1, object userState)
    {
        if ((this.JsonGPS_ListsOperationCompleted == null))
        {
            this.JsonGPS_ListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJsonGPS_ListsOperationCompleted);
        }
        this.InvokeAsync("JsonGPS_Lists", new object[] {
                    portalid,
                    search,
                    criteria,
                    criteria1}, this.JsonGPS_ListsOperationCompleted, userState);
    }

    private void OnJsonGPS_ListsOperationCompleted(object arg)
    {
        if ((this.JsonGPS_ListsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.JsonGPS_ListsCompleted(this, new JsonGPS_ListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GetPassword", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetPassword(string portalID, string luser)
    {
        object[] results = this.Invoke("GetPassword", new object[] {
                    portalID,
                    luser});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetPassword(string portalID, string luser, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetPassword", new object[] {
                    portalID,
                    luser}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGetPassword(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GetPasswordAsync(string portalID, string luser)
    {
        this.GetPasswordAsync(portalID, luser, null);
    }

    /// <remarks/>
    public void GetPasswordAsync(string portalID, string luser, object userState)
    {
        if ((this.GetPasswordOperationCompleted == null))
        {
            this.GetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordOperationCompleted);
        }
        this.InvokeAsync("GetPassword", new object[] {
                    portalID,
                    luser}, this.GetPasswordOperationCompleted, userState);
    }

    private void OnGetPasswordOperationCompleted(object arg)
    {
        if ((this.GetPasswordCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPasswordCompleted(this, new GetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/JsonBuro_List", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string JsonBuro_List(int portalid, string userAdd, string status)
    {
        object[] results = this.Invoke("JsonBuro_List", new object[] {
                    portalid,
                    userAdd,
                    status});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJsonBuro_List(int portalid, string userAdd, string status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("JsonBuro_List", new object[] {
                    portalid,
                    userAdd,
                    status}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJsonBuro_List(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void JsonBuro_ListAsync(int portalid, string userAdd, string status)
    {
        this.JsonBuro_ListAsync(portalid, userAdd, status, null);
    }

    /// <remarks/>
    public void JsonBuro_ListAsync(int portalid, string userAdd, string status, object userState)
    {
        if ((this.JsonBuro_ListOperationCompleted == null))
        {
            this.JsonBuro_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJsonBuro_ListOperationCompleted);
        }
        this.InvokeAsync("JsonBuro_List", new object[] {
                    portalid,
                    userAdd,
                    status}, this.JsonBuro_ListOperationCompleted, userState);
    }

    private void OnJsonBuro_ListOperationCompleted(object arg)
    {
        if ((this.JsonBuro_ListCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.JsonBuro_ListCompleted(this, new JsonBuro_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Buro_List_With_File", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Buro_List_With_File(int portalid, int userAdd, string status)
    {
        object[] results = this.Invoke("Buro_List_With_File", new object[] {
                    portalid,
                    userAdd,
                    status});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginBuro_List_With_File(int portalid, int userAdd, string status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Buro_List_With_File", new object[] {
                    portalid,
                    userAdd,
                    status}, callback, asyncState);
    }

    /// <remarks/>
    public string EndBuro_List_With_File(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Buro_List_With_FileAsync(int portalid, int userAdd, string status)
    {
        this.Buro_List_With_FileAsync(portalid, userAdd, status, null);
    }

    /// <remarks/>
    public void Buro_List_With_FileAsync(int portalid, int userAdd, string status, object userState)
    {
        if ((this.Buro_List_With_FileOperationCompleted == null))
        {
            this.Buro_List_With_FileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuro_List_With_FileOperationCompleted);
        }
        this.InvokeAsync("Buro_List_With_File", new object[] {
                    portalid,
                    userAdd,
                    status}, this.Buro_List_With_FileOperationCompleted, userState);
    }

    private void OnBuro_List_With_FileOperationCompleted(object arg)
    {
        if ((this.Buro_List_With_FileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Buro_List_With_FileCompleted(this, new Buro_List_With_FileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Add_Finsol", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Add_Finsol(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments, string status)
    {
        object[] results = this.Invoke("GPS_Add_Finsol", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments,
                    status});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Add_Finsol(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments, string status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Add_Finsol", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments,
                    status}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Add_Finsol(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_Add_FinsolAsync(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments, string status)
    {
        this.GPS_Add_FinsolAsync(portalid, moduleid, userGPS, id, date, barcode, actividad, longitude, latitude, startdate, enddate, comments, status, null);
    }

    /// <remarks/>
    public void GPS_Add_FinsolAsync(int portalid, int moduleid, int userGPS, int id, string date, string barcode, string actividad, string longitude, string latitude, string startdate, string enddate, string comments, string status, object userState)
    {
        if ((this.GPS_Add_FinsolOperationCompleted == null))
        {
            this.GPS_Add_FinsolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Add_FinsolOperationCompleted);
        }
        this.InvokeAsync("GPS_Add_Finsol", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    id,
                    date,
                    barcode,
                    actividad,
                    longitude,
                    latitude,
                    startdate,
                    enddate,
                    comments,
                    status}, this.GPS_Add_FinsolOperationCompleted, userState);
    }

    private void OnGPS_Add_FinsolOperationCompleted(object arg)
    {
        if ((this.GPS_Add_FinsolCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Add_FinsolCompleted(this, new GPS_Add_FinsolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Add_Finsol_GetLastRow", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Add_Finsol_GetLastRow(int portalid, int userGPS)
    {
        object[] results = this.Invoke("GPS_Add_Finsol_GetLastRow", new object[] {
                    portalid,
                    userGPS});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Add_Finsol_GetLastRow(int portalid, int userGPS, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Add_Finsol_GetLastRow", new object[] {
                    portalid,
                    userGPS}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Add_Finsol_GetLastRow(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_Add_Finsol_GetLastRowAsync(int portalid, int userGPS)
    {
        this.GPS_Add_Finsol_GetLastRowAsync(portalid, userGPS, null);
    }

    /// <remarks/>
    public void GPS_Add_Finsol_GetLastRowAsync(int portalid, int userGPS, object userState)
    {
        if ((this.GPS_Add_Finsol_GetLastRowOperationCompleted == null))
        {
            this.GPS_Add_Finsol_GetLastRowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Add_Finsol_GetLastRowOperationCompleted);
        }
        this.InvokeAsync("GPS_Add_Finsol_GetLastRow", new object[] {
                    portalid,
                    userGPS}, this.GPS_Add_Finsol_GetLastRowOperationCompleted, userState);
    }

    private void OnGPS_Add_Finsol_GetLastRowOperationCompleted(object arg)
    {
        if ((this.GPS_Add_Finsol_GetLastRowCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Add_Finsol_GetLastRowCompleted(this, new GPS_Add_Finsol_GetLastRowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Buro_Return_JsonXml", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Buro_Return_JsonXml(int portalid, string search, string criteria, string roles, string xmlTAG)
    {
        object[] results = this.Invoke("Buro_Return_JsonXml", new object[] {
                    portalid,
                    search,
                    criteria,
                    roles,
                    xmlTAG});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginBuro_Return_JsonXml(int portalid, string search, string criteria, string roles, string xmlTAG, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Buro_Return_JsonXml", new object[] {
                    portalid,
                    search,
                    criteria,
                    roles,
                    xmlTAG}, callback, asyncState);
    }

    /// <remarks/>
    public string EndBuro_Return_JsonXml(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Buro_Return_JsonXmlAsync(int portalid, string search, string criteria, string roles, string xmlTAG)
    {
        this.Buro_Return_JsonXmlAsync(portalid, search, criteria, roles, xmlTAG, null);
    }

    /// <remarks/>
    public void Buro_Return_JsonXmlAsync(int portalid, string search, string criteria, string roles, string xmlTAG, object userState)
    {
        if ((this.Buro_Return_JsonXmlOperationCompleted == null))
        {
            this.Buro_Return_JsonXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuro_Return_JsonXmlOperationCompleted);
        }
        this.InvokeAsync("Buro_Return_JsonXml", new object[] {
                    portalid,
                    search,
                    criteria,
                    roles,
                    xmlTAG}, this.Buro_Return_JsonXmlOperationCompleted, userState);
    }

    private void OnBuro_Return_JsonXmlOperationCompleted(object arg)
    {
        if ((this.Buro_Return_JsonXmlCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Buro_Return_JsonXmlCompleted(this, new Buro_Return_JsonXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/JsonGet_Roles", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string JsonGet_Roles(int portalid, string userid, string search)
    {
        object[] results = this.Invoke("JsonGet_Roles", new object[] {
                    portalid,
                    userid,
                    search});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJsonGet_Roles(int portalid, string userid, string search, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("JsonGet_Roles", new object[] {
                    portalid,
                    userid,
                    search}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJsonGet_Roles(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void JsonGet_RolesAsync(int portalid, string userid, string search)
    {
        this.JsonGet_RolesAsync(portalid, userid, search, null);
    }

    /// <remarks/>
    public void JsonGet_RolesAsync(int portalid, string userid, string search, object userState)
    {
        if ((this.JsonGet_RolesOperationCompleted == null))
        {
            this.JsonGet_RolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJsonGet_RolesOperationCompleted);
        }
        this.InvokeAsync("JsonGet_Roles", new object[] {
                    portalid,
                    userid,
                    search}, this.JsonGet_RolesOperationCompleted, userState);
    }

    private void OnJsonGet_RolesOperationCompleted(object arg)
    {
        if ((this.JsonGet_RolesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.JsonGet_RolesCompleted(this, new JsonGet_RolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/JsonGet_Get_Profile", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string JsonGet_Get_Profile(string userid, string profile)
    {
        object[] results = this.Invoke("JsonGet_Get_Profile", new object[] {
                    userid,
                    profile});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJsonGet_Get_Profile(string userid, string profile, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("JsonGet_Get_Profile", new object[] {
                    userid,
                    profile}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJsonGet_Get_Profile(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void JsonGet_Get_ProfileAsync(string userid, string profile)
    {
        this.JsonGet_Get_ProfileAsync(userid, profile, null);
    }

    /// <remarks/>
    public void JsonGet_Get_ProfileAsync(string userid, string profile, object userState)
    {
        if ((this.JsonGet_Get_ProfileOperationCompleted == null))
        {
            this.JsonGet_Get_ProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJsonGet_Get_ProfileOperationCompleted);
        }
        this.InvokeAsync("JsonGet_Get_Profile", new object[] {
                    userid,
                    profile}, this.JsonGet_Get_ProfileOperationCompleted, userState);
    }

    private void OnJsonGet_Get_ProfileOperationCompleted(object arg)
    {
        if ((this.JsonGet_Get_ProfileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.JsonGet_Get_ProfileCompleted(this, new JsonGet_Get_ProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Get_AgendaPlan", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Get_AgendaPlan(int portalid, int userid, string search, string criteria)
    {
        object[] results = this.Invoke("Json_Get_AgendaPlan", new object[] {
                    portalid,
                    userid,
                    search,
                    criteria});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Get_AgendaPlan(int portalid, int userid, string search, string criteria, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Get_AgendaPlan", new object[] {
                    portalid,
                    userid,
                    search,
                    criteria}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Get_AgendaPlan(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Get_AgendaPlanAsync(int portalid, int userid, string search, string criteria)
    {
        this.Json_Get_AgendaPlanAsync(portalid, userid, search, criteria, null);
    }

    /// <remarks/>
    public void Json_Get_AgendaPlanAsync(int portalid, int userid, string search, string criteria, object userState)
    {
        if ((this.Json_Get_AgendaPlanOperationCompleted == null))
        {
            this.Json_Get_AgendaPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Get_AgendaPlanOperationCompleted);
        }
        this.InvokeAsync("Json_Get_AgendaPlan", new object[] {
                    portalid,
                    userid,
                    search,
                    criteria}, this.Json_Get_AgendaPlanOperationCompleted, userState);
    }

    private void OnJson_Get_AgendaPlanOperationCompleted(object arg)
    {
        if ((this.Json_Get_AgendaPlanCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Get_AgendaPlanCompleted(this, new Json_Get_AgendaPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Get_AgendaPlanPages", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Get_AgendaPlanPages(int portalid, int userid, string search, string criteria, int counter)
    {
        object[] results = this.Invoke("Json_Get_AgendaPlanPages", new object[] {
                    portalid,
                    userid,
                    search,
                    criteria,
                    counter});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Get_AgendaPlanPages(int portalid, int userid, string search, string criteria, int counter, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Get_AgendaPlanPages", new object[] {
                    portalid,
                    userid,
                    search,
                    criteria,
                    counter}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Get_AgendaPlanPages(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Get_AgendaPlanPagesAsync(int portalid, int userid, string search, string criteria, int counter)
    {
        this.Json_Get_AgendaPlanPagesAsync(portalid, userid, search, criteria, counter, null);
    }

    /// <remarks/>
    public void Json_Get_AgendaPlanPagesAsync(int portalid, int userid, string search, string criteria, int counter, object userState)
    {
        if ((this.Json_Get_AgendaPlanPagesOperationCompleted == null))
        {
            this.Json_Get_AgendaPlanPagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Get_AgendaPlanPagesOperationCompleted);
        }
        this.InvokeAsync("Json_Get_AgendaPlanPages", new object[] {
                    portalid,
                    userid,
                    search,
                    criteria,
                    counter}, this.Json_Get_AgendaPlanPagesOperationCompleted, userState);
    }

    private void OnJson_Get_AgendaPlanPagesOperationCompleted(object arg)
    {
        if ((this.Json_Get_AgendaPlanPagesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Get_AgendaPlanPagesCompleted(this, new Json_Get_AgendaPlanPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Update_AgendaPlan", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Update_AgendaPlan(string portalid, string userid, string custID, string startDate)
    {
        object[] results = this.Invoke("Json_Update_AgendaPlan", new object[] {
                    portalid,
                    userid,
                    custID,
                    startDate});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Update_AgendaPlan(string portalid, string userid, string custID, string startDate, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Update_AgendaPlan", new object[] {
                    portalid,
                    userid,
                    custID,
                    startDate}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Update_AgendaPlan(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Update_AgendaPlanAsync(string portalid, string userid, string custID, string startDate)
    {
        this.Json_Update_AgendaPlanAsync(portalid, userid, custID, startDate, null);
    }

    /// <remarks/>
    public void Json_Update_AgendaPlanAsync(string portalid, string userid, string custID, string startDate, object userState)
    {
        if ((this.Json_Update_AgendaPlanOperationCompleted == null))
        {
            this.Json_Update_AgendaPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Update_AgendaPlanOperationCompleted);
        }
        this.InvokeAsync("Json_Update_AgendaPlan", new object[] {
                    portalid,
                    userid,
                    custID,
                    startDate}, this.Json_Update_AgendaPlanOperationCompleted, userState);
    }

    private void OnJson_Update_AgendaPlanOperationCompleted(object arg)
    {
        if ((this.Json_Update_AgendaPlanCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Update_AgendaPlanCompleted(this, new Json_Update_AgendaPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_AddTasks_UpdatePlan", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_AddTasks_UpdatePlan(int portalid, int moduleid, string userGPS, System.DateTime startDate, string actividad, int custID, string custName, int daysDelay, int quoteNumber, string status)
    {
        object[] results = this.Invoke("Json_AddTasks_UpdatePlan", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    startDate,
                    actividad,
                    custID,
                    custName,
                    daysDelay,
                    quoteNumber,
                    status});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_AddTasks_UpdatePlan(int portalid, int moduleid, string userGPS, System.DateTime startDate, string actividad, int custID, string custName, int daysDelay, int quoteNumber, string status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_AddTasks_UpdatePlan", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    startDate,
                    actividad,
                    custID,
                    custName,
                    daysDelay,
                    quoteNumber,
                    status}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_AddTasks_UpdatePlan(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_AddTasks_UpdatePlanAsync(int portalid, int moduleid, string userGPS, System.DateTime startDate, string actividad, int custID, string custName, int daysDelay, int quoteNumber, string status)
    {
        this.Json_AddTasks_UpdatePlanAsync(portalid, moduleid, userGPS, startDate, actividad, custID, custName, daysDelay, quoteNumber, status, null);
    }

    /// <remarks/>
    public void Json_AddTasks_UpdatePlanAsync(int portalid, int moduleid, string userGPS, System.DateTime startDate, string actividad, int custID, string custName, int daysDelay, int quoteNumber, string status, object userState)
    {
        if ((this.Json_AddTasks_UpdatePlanOperationCompleted == null))
        {
            this.Json_AddTasks_UpdatePlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_AddTasks_UpdatePlanOperationCompleted);
        }
        this.InvokeAsync("Json_AddTasks_UpdatePlan", new object[] {
                    portalid,
                    moduleid,
                    userGPS,
                    startDate,
                    actividad,
                    custID,
                    custName,
                    daysDelay,
                    quoteNumber,
                    status}, this.Json_AddTasks_UpdatePlanOperationCompleted, userState);
    }

    private void OnJson_AddTasks_UpdatePlanOperationCompleted(object arg)
    {
        if ((this.Json_AddTasks_UpdatePlanCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_AddTasks_UpdatePlanCompleted(this, new Json_AddTasks_UpdatePlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Count_AgendaPlan", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Count_AgendaPlan(int portalid, int userid, string search, string criteria)
    {
        object[] results = this.Invoke("Json_Count_AgendaPlan", new object[] {
                    portalid,
                    userid,
                    search,
                    criteria});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Count_AgendaPlan(int portalid, int userid, string search, string criteria, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Count_AgendaPlan", new object[] {
                    portalid,
                    userid,
                    search,
                    criteria}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Count_AgendaPlan(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Count_AgendaPlanAsync(int portalid, int userid, string search, string criteria)
    {
        this.Json_Count_AgendaPlanAsync(portalid, userid, search, criteria, null);
    }

    /// <remarks/>
    public void Json_Count_AgendaPlanAsync(int portalid, int userid, string search, string criteria, object userState)
    {
        if ((this.Json_Count_AgendaPlanOperationCompleted == null))
        {
            this.Json_Count_AgendaPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Count_AgendaPlanOperationCompleted);
        }
        this.InvokeAsync("Json_Count_AgendaPlan", new object[] {
                    portalid,
                    userid,
                    search,
                    criteria}, this.Json_Count_AgendaPlanOperationCompleted, userState);
    }

    private void OnJson_Count_AgendaPlanOperationCompleted(object arg)
    {
        if ((this.Json_Count_AgendaPlanCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Count_AgendaPlanCompleted(this, new Json_Count_AgendaPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Get_Tasks", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Get_Tasks(int portalid, int userGPS, System.DateTime startDate)
    {
        object[] results = this.Invoke("Json_Get_Tasks", new object[] {
                    portalid,
                    userGPS,
                    startDate});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Get_Tasks(int portalid, int userGPS, System.DateTime startDate, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Get_Tasks", new object[] {
                    portalid,
                    userGPS,
                    startDate}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Get_Tasks(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Get_TasksAsync(int portalid, int userGPS, System.DateTime startDate)
    {
        this.Json_Get_TasksAsync(portalid, userGPS, startDate, null);
    }

    /// <remarks/>
    public void Json_Get_TasksAsync(int portalid, int userGPS, System.DateTime startDate, object userState)
    {
        if ((this.Json_Get_TasksOperationCompleted == null))
        {
            this.Json_Get_TasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Get_TasksOperationCompleted);
        }
        this.InvokeAsync("Json_Get_Tasks", new object[] {
                    portalid,
                    userGPS,
                    startDate}, this.Json_Get_TasksOperationCompleted, userState);
    }

    private void OnJson_Get_TasksOperationCompleted(object arg)
    {
        if ((this.Json_Get_TasksCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Get_TasksCompleted(this, new Json_Get_TasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Tasks_Update", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Tasks_Update(int portalid, int gpsID, int userGPS, System.DateTime startDate, string actividad, string latitude, string longitude)
    {
        object[] results = this.Invoke("Json_Tasks_Update", new object[] {
                    portalid,
                    gpsID,
                    userGPS,
                    startDate,
                    actividad,
                    latitude,
                    longitude});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Tasks_Update(int portalid, int gpsID, int userGPS, System.DateTime startDate, string actividad, string latitude, string longitude, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Tasks_Update", new object[] {
                    portalid,
                    gpsID,
                    userGPS,
                    startDate,
                    actividad,
                    latitude,
                    longitude}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Tasks_Update(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Tasks_UpdateAsync(int portalid, int gpsID, int userGPS, System.DateTime startDate, string actividad, string latitude, string longitude)
    {
        this.Json_Tasks_UpdateAsync(portalid, gpsID, userGPS, startDate, actividad, latitude, longitude, null);
    }

    /// <remarks/>
    public void Json_Tasks_UpdateAsync(int portalid, int gpsID, int userGPS, System.DateTime startDate, string actividad, string latitude, string longitude, object userState)
    {
        if ((this.Json_Tasks_UpdateOperationCompleted == null))
        {
            this.Json_Tasks_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Tasks_UpdateOperationCompleted);
        }
        this.InvokeAsync("Json_Tasks_Update", new object[] {
                    portalid,
                    gpsID,
                    userGPS,
                    startDate,
                    actividad,
                    latitude,
                    longitude}, this.Json_Tasks_UpdateOperationCompleted, userState);
    }

    private void OnJson_Tasks_UpdateOperationCompleted(object arg)
    {
        if ((this.Json_Tasks_UpdateCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Tasks_UpdateCompleted(this, new Json_Tasks_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Tasks_Get", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Tasks_Get(int portalid, int gpsID)
    {
        object[] results = this.Invoke("Json_Tasks_Get", new object[] {
                    portalid,
                    gpsID});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Tasks_Get(int portalid, int gpsID, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Tasks_Get", new object[] {
                    portalid,
                    gpsID}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Tasks_Get(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Tasks_GetAsync(int portalid, int gpsID)
    {
        this.Json_Tasks_GetAsync(portalid, gpsID, null);
    }

    /// <remarks/>
    public void Json_Tasks_GetAsync(int portalid, int gpsID, object userState)
    {
        if ((this.Json_Tasks_GetOperationCompleted == null))
        {
            this.Json_Tasks_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Tasks_GetOperationCompleted);
        }
        this.InvokeAsync("Json_Tasks_Get", new object[] {
                    portalid,
                    gpsID}, this.Json_Tasks_GetOperationCompleted, userState);
    }

    private void OnJson_Tasks_GetOperationCompleted(object arg)
    {
        if ((this.Json_Tasks_GetCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Tasks_GetCompleted(this, new Json_Tasks_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Update_Tasks", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Update_Tasks(int portalid, int gpsID, int userGPS, string actividad, string latitude, string longitude, System.DateTime endDate, string comments)
    {
        object[] results = this.Invoke("Json_Update_Tasks", new object[] {
                    portalid,
                    gpsID,
                    userGPS,
                    actividad,
                    latitude,
                    longitude,
                    endDate,
                    comments});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Update_Tasks(int portalid, int gpsID, int userGPS, string actividad, string latitude, string longitude, System.DateTime endDate, string comments, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Update_Tasks", new object[] {
                    portalid,
                    gpsID,
                    userGPS,
                    actividad,
                    latitude,
                    longitude,
                    endDate,
                    comments}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Update_Tasks(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Update_TasksAsync(int portalid, int gpsID, int userGPS, string actividad, string latitude, string longitude, System.DateTime endDate, string comments)
    {
        this.Json_Update_TasksAsync(portalid, gpsID, userGPS, actividad, latitude, longitude, endDate, comments, null);
    }

    /// <remarks/>
    public void Json_Update_TasksAsync(int portalid, int gpsID, int userGPS, string actividad, string latitude, string longitude, System.DateTime endDate, string comments, object userState)
    {
        if ((this.Json_Update_TasksOperationCompleted == null))
        {
            this.Json_Update_TasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Update_TasksOperationCompleted);
        }
        this.InvokeAsync("Json_Update_Tasks", new object[] {
                    portalid,
                    gpsID,
                    userGPS,
                    actividad,
                    latitude,
                    longitude,
                    endDate,
                    comments}, this.Json_Update_TasksOperationCompleted, userState);
    }

    private void OnJson_Update_TasksOperationCompleted(object arg)
    {
        if ((this.Json_Update_TasksCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Update_TasksCompleted(this, new Json_Update_TasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Get_CodeConversion", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Get_CodeConversion(int portalid, int userGPS)
    {
        object[] results = this.Invoke("Json_Get_CodeConversion", new object[] {
                    portalid,
                    userGPS});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Get_CodeConversion(int portalid, int userGPS, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Get_CodeConversion", new object[] {
                    portalid,
                    userGPS}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Get_CodeConversion(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Get_CodeConversionAsync(int portalid, int userGPS)
    {
        this.Json_Get_CodeConversionAsync(portalid, userGPS, null);
    }

    /// <remarks/>
    public void Json_Get_CodeConversionAsync(int portalid, int userGPS, object userState)
    {
        if ((this.Json_Get_CodeConversionOperationCompleted == null))
        {
            this.Json_Get_CodeConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Get_CodeConversionOperationCompleted);
        }
        this.InvokeAsync("Json_Get_CodeConversion", new object[] {
                    portalid,
                    userGPS}, this.Json_Get_CodeConversionOperationCompleted, userState);
    }

    private void OnJson_Get_CodeConversionOperationCompleted(object arg)
    {
        if ((this.Json_Get_CodeConversionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Get_CodeConversionCompleted(this, new Json_Get_CodeConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Get_OCR", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Get_OCR(int portalid, int userGPS, int typeOCR, int id)
    {
        object[] results = this.Invoke("Json_Get_OCR", new object[] {
                    portalid,
                    userGPS,
                    typeOCR,
                    id});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Get_OCR(int portalid, int userGPS, int typeOCR, int id, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Get_OCR", new object[] {
                    portalid,
                    userGPS,
                    typeOCR,
                    id}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Get_OCR(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Get_OCRAsync(int portalid, int userGPS, int typeOCR, int id)
    {
        this.Json_Get_OCRAsync(portalid, userGPS, typeOCR, id, null);
    }

    /// <remarks/>
    public void Json_Get_OCRAsync(int portalid, int userGPS, int typeOCR, int id, object userState)
    {
        if ((this.Json_Get_OCROperationCompleted == null))
        {
            this.Json_Get_OCROperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Get_OCROperationCompleted);
        }
        this.InvokeAsync("Json_Get_OCR", new object[] {
                    portalid,
                    userGPS,
                    typeOCR,
                    id}, this.Json_Get_OCROperationCompleted, userState);
    }

    private void OnJson_Get_OCROperationCompleted(object arg)
    {
        if ((this.Json_Get_OCRCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Get_OCRCompleted(this, new Json_Get_OCRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Update_Tasks_Buro", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Update_Tasks_Buro(int portalid, int gpsID, string comments)
    {
        object[] results = this.Invoke("Json_Update_Tasks_Buro", new object[] {
                    portalid,
                    gpsID,
                    comments});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Update_Tasks_Buro(int portalid, int gpsID, string comments, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Update_Tasks_Buro", new object[] {
                    portalid,
                    gpsID,
                    comments}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Update_Tasks_Buro(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Update_Tasks_BuroAsync(int portalid, int gpsID, string comments)
    {
        this.Json_Update_Tasks_BuroAsync(portalid, gpsID, comments, null);
    }

    /// <remarks/>
    public void Json_Update_Tasks_BuroAsync(int portalid, int gpsID, string comments, object userState)
    {
        if ((this.Json_Update_Tasks_BuroOperationCompleted == null))
        {
            this.Json_Update_Tasks_BuroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Update_Tasks_BuroOperationCompleted);
        }
        this.InvokeAsync("Json_Update_Tasks_Buro", new object[] {
                    portalid,
                    gpsID,
                    comments}, this.Json_Update_Tasks_BuroOperationCompleted, userState);
    }

    private void OnJson_Update_Tasks_BuroOperationCompleted(object arg)
    {
        if ((this.Json_Update_Tasks_BuroCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Update_Tasks_BuroCompleted(this, new Json_Update_Tasks_BuroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/TransReadImageBase64", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TransReadImageBase64(string filePath)
    {
        object[] results = this.Invoke("TransReadImageBase64", new object[] {
                    filePath});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTransReadImageBase64(string filePath, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TransReadImageBase64", new object[] {
                    filePath}, callback, asyncState);
    }

    /// <remarks/>
    public string EndTransReadImageBase64(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void TransReadImageBase64Async(string filePath)
    {
        this.TransReadImageBase64Async(filePath, null);
    }

    /// <remarks/>
    public void TransReadImageBase64Async(string filePath, object userState)
    {
        if ((this.TransReadImageBase64OperationCompleted == null))
        {
            this.TransReadImageBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransReadImageBase64OperationCompleted);
        }
        this.InvokeAsync("TransReadImageBase64", new object[] {
                    filePath}, this.TransReadImageBase64OperationCompleted, userState);
    }

    private void OnTransReadImageBase64OperationCompleted(object arg)
    {
        if ((this.TransReadImageBase64Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransReadImageBase64Completed(this, new TransReadImageBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/TransReadImage", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
    public byte[] TransReadImage(string filePath)
    {
        object[] results = this.Invoke("TransReadImage", new object[] {
                    filePath});
        return ((byte[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTransReadImage(string filePath, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TransReadImage", new object[] {
                    filePath}, callback, asyncState);
    }

    /// <remarks/>
    public byte[] EndTransReadImage(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }

    /// <remarks/>
    public void TransReadImageAsync(string filePath)
    {
        this.TransReadImageAsync(filePath, null);
    }

    /// <remarks/>
    public void TransReadImageAsync(string filePath, object userState)
    {
        if ((this.TransReadImageOperationCompleted == null))
        {
            this.TransReadImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransReadImageOperationCompleted);
        }
        this.InvokeAsync("TransReadImage", new object[] {
                    filePath}, this.TransReadImageOperationCompleted, userState);
    }

    private void OnTransReadImageOperationCompleted(object arg)
    {
        if ((this.TransReadImageCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransReadImageCompleted(this, new TransReadImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/TransImageLocal", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TransImageLocal(int portalid)
    {
        object[] results = this.Invoke("TransImageLocal", new object[] {
                    portalid});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTransImageLocal(int portalid, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TransImageLocal", new object[] {
                    portalid}, callback, asyncState);
    }

    /// <remarks/>
    public string EndTransImageLocal(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void TransImageLocalAsync(int portalid)
    {
        this.TransImageLocalAsync(portalid, null);
    }

    /// <remarks/>
    public void TransImageLocalAsync(int portalid, object userState)
    {
        if ((this.TransImageLocalOperationCompleted == null))
        {
            this.TransImageLocalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransImageLocalOperationCompleted);
        }
        this.InvokeAsync("TransImageLocal", new object[] {
                    portalid}, this.TransImageLocalOperationCompleted, userState);
    }

    private void OnTransImageLocalOperationCompleted(object arg)
    {
        if ((this.TransImageLocalCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransImageLocalCompleted(this, new TransImageLocalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/TransImagePar", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TransImagePar(int portalid, string base64)
    {
        object[] results = this.Invoke("TransImagePar", new object[] {
                    portalid,
                    base64});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTransImagePar(int portalid, string base64, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TransImagePar", new object[] {
                    portalid,
                    base64}, callback, asyncState);
    }

    /// <remarks/>
    public string EndTransImagePar(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void TransImageParAsync(int portalid, string base64)
    {
        this.TransImageParAsync(portalid, base64, null);
    }

    /// <remarks/>
    public void TransImageParAsync(int portalid, string base64, object userState)
    {
        if ((this.TransImageParOperationCompleted == null))
        {
            this.TransImageParOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransImageParOperationCompleted);
        }
        this.InvokeAsync("TransImagePar", new object[] {
                    portalid,
                    base64}, this.TransImageParOperationCompleted, userState);
    }

    private void OnTransImageParOperationCompleted(object arg)
    {
        if ((this.TransImageParCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransImageParCompleted(this, new TransImageParCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/TransImageStr", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TransImageStr(string portalid, string userGPS, string gpsID, string base64, string directory, string cui, string nombres, string apellidos, string nacimiento)
    {
        object[] results = this.Invoke("TransImageStr", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory,
                    cui,
                    nombres,
                    apellidos,
                    nacimiento});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTransImageStr(string portalid, string userGPS, string gpsID, string base64, string directory, string cui, string nombres, string apellidos, string nacimiento, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TransImageStr", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory,
                    cui,
                    nombres,
                    apellidos,
                    nacimiento}, callback, asyncState);
    }

    /// <remarks/>
    public string EndTransImageStr(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void TransImageStrAsync(string portalid, string userGPS, string gpsID, string base64, string directory, string cui, string nombres, string apellidos, string nacimiento)
    {
        this.TransImageStrAsync(portalid, userGPS, gpsID, base64, directory, cui, nombres, apellidos, nacimiento, null);
    }

    /// <remarks/>
    public void TransImageStrAsync(string portalid, string userGPS, string gpsID, string base64, string directory, string cui, string nombres, string apellidos, string nacimiento, object userState)
    {
        if ((this.TransImageStrOperationCompleted == null))
        {
            this.TransImageStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransImageStrOperationCompleted);
        }
        this.InvokeAsync("TransImageStr", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory,
                    cui,
                    nombres,
                    apellidos,
                    nacimiento}, this.TransImageStrOperationCompleted, userState);
    }

    private void OnTransImageStrOperationCompleted(object arg)
    {
        if ((this.TransImageStrCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransImageStrCompleted(this, new TransImageStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/TransImagebyte", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TransImagebyte(int portalid, int userGPS, int gpsID, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] byteArray, string directory)
    {
        object[] results = this.Invoke("TransImagebyte", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    byteArray,
                    directory});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTransImagebyte(int portalid, int userGPS, int gpsID, byte[] byteArray, string directory, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TransImagebyte", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    byteArray,
                    directory}, callback, asyncState);
    }

    /// <remarks/>
    public string EndTransImagebyte(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void TransImagebyteAsync(int portalid, int userGPS, int gpsID, byte[] byteArray, string directory)
    {
        this.TransImagebyteAsync(portalid, userGPS, gpsID, byteArray, directory, null);
    }

    /// <remarks/>
    public void TransImagebyteAsync(int portalid, int userGPS, int gpsID, byte[] byteArray, string directory, object userState)
    {
        if ((this.TransImagebyteOperationCompleted == null))
        {
            this.TransImagebyteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransImagebyteOperationCompleted);
        }
        this.InvokeAsync("TransImagebyte", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    byteArray,
                    directory}, this.TransImagebyteOperationCompleted, userState);
    }

    private void OnTransImagebyteOperationCompleted(object arg)
    {
        if ((this.TransImagebyteCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransImagebyteCompleted(this, new TransImagebyteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/TransImage", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TransImage(int portalid, int userGPS, int gpsID, string base64, string directory)
    {
        object[] results = this.Invoke("TransImage", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTransImage(int portalid, int userGPS, int gpsID, string base64, string directory, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TransImage", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory}, callback, asyncState);
    }

    /// <remarks/>
    public string EndTransImage(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void TransImageAsync(int portalid, int userGPS, int gpsID, string base64, string directory)
    {
        this.TransImageAsync(portalid, userGPS, gpsID, base64, directory, null);
    }

    /// <remarks/>
    public void TransImageAsync(int portalid, int userGPS, int gpsID, string base64, string directory, object userState)
    {
        if ((this.TransImageOperationCompleted == null))
        {
            this.TransImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransImageOperationCompleted);
        }
        this.InvokeAsync("TransImage", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    base64,
                    directory}, this.TransImageOperationCompleted, userState);
    }

    private void OnTransImageOperationCompleted(object arg)
    {
        if ((this.TransImageCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransImageCompleted(this, new TransImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/TransImageType", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TransImageType(int portalid, int userGPS, int gpsID, string photoType, string base64, string directory)
    {
        object[] results = this.Invoke("TransImageType", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    photoType,
                    base64,
                    directory});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginTransImageType(int portalid, int userGPS, int gpsID, string photoType, string base64, string directory, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("TransImageType", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    photoType,
                    base64,
                    directory}, callback, asyncState);
    }

    /// <remarks/>
    public string EndTransImageType(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void TransImageTypeAsync(int portalid, int userGPS, int gpsID, string photoType, string base64, string directory)
    {
        this.TransImageTypeAsync(portalid, userGPS, gpsID, photoType, base64, directory, null);
    }

    /// <remarks/>
    public void TransImageTypeAsync(int portalid, int userGPS, int gpsID, string photoType, string base64, string directory, object userState)
    {
        if ((this.TransImageTypeOperationCompleted == null))
        {
            this.TransImageTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransImageTypeOperationCompleted);
        }
        this.InvokeAsync("TransImageType", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    photoType,
                    base64,
                    directory}, this.TransImageTypeOperationCompleted, userState);
    }

    private void OnTransImageTypeOperationCompleted(object arg)
    {
        if ((this.TransImageTypeCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransImageTypeCompleted(this, new TransImageTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Get_Last_Added_userGPS", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Get_Last_Added_userGPS(int portalid, int userGPS)
    {
        object[] results = this.Invoke("Get_Last_Added_userGPS", new object[] {
                    portalid,
                    userGPS});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGet_Last_Added_userGPS(int portalid, int userGPS, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Get_Last_Added_userGPS", new object[] {
                    portalid,
                    userGPS}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGet_Last_Added_userGPS(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Get_Last_Added_userGPSAsync(int portalid, int userGPS)
    {
        this.Get_Last_Added_userGPSAsync(portalid, userGPS, null);
    }

    /// <remarks/>
    public void Get_Last_Added_userGPSAsync(int portalid, int userGPS, object userState)
    {
        if ((this.Get_Last_Added_userGPSOperationCompleted == null))
        {
            this.Get_Last_Added_userGPSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Last_Added_userGPSOperationCompleted);
        }
        this.InvokeAsync("Get_Last_Added_userGPS", new object[] {
                    portalid,
                    userGPS}, this.Get_Last_Added_userGPSOperationCompleted, userState);
    }

    private void OnGet_Last_Added_userGPSOperationCompleted(object arg)
    {
        if ((this.Get_Last_Added_userGPSCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Get_Last_Added_userGPSCompleted(this, new Get_Last_Added_userGPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/ListJPG", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string[] ListJPG(string drive, int portalid, string Search)
    {
        object[] results = this.Invoke("ListJPG", new object[] {
                    drive,
                    portalid,
                    Search});
        return ((string[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginListJPG(string drive, int portalid, string Search, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("ListJPG", new object[] {
                    drive,
                    portalid,
                    Search}, callback, asyncState);
    }

    /// <remarks/>
    public string[] EndListJPG(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }

    /// <remarks/>
    public void ListJPGAsync(string drive, int portalid, string Search)
    {
        this.ListJPGAsync(drive, portalid, Search, null);
    }

    /// <remarks/>
    public void ListJPGAsync(string drive, int portalid, string Search, object userState)
    {
        if ((this.ListJPGOperationCompleted == null))
        {
            this.ListJPGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListJPGOperationCompleted);
        }
        this.InvokeAsync("ListJPG", new object[] {
                    drive,
                    portalid,
                    Search}, this.ListJPGOperationCompleted, userState);
    }

    private void OnListJPGOperationCompleted(object arg)
    {
        if ((this.ListJPGCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListJPGCompleted(this, new ListJPGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/SendMailEquifax", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string SendMailEquifax(int portalID, string userName, string rolesMailTo, string Subject, string Body)
    {
        object[] results = this.Invoke("SendMailEquifax", new object[] {
                    portalID,
                    userName,
                    rolesMailTo,
                    Subject,
                    Body});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSendMailEquifax(int portalID, string userName, string rolesMailTo, string Subject, string Body, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SendMailEquifax", new object[] {
                    portalID,
                    userName,
                    rolesMailTo,
                    Subject,
                    Body}, callback, asyncState);
    }

    /// <remarks/>
    public string EndSendMailEquifax(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void SendMailEquifaxAsync(int portalID, string userName, string rolesMailTo, string Subject, string Body)
    {
        this.SendMailEquifaxAsync(portalID, userName, rolesMailTo, Subject, Body, null);
    }

    /// <remarks/>
    public void SendMailEquifaxAsync(int portalID, string userName, string rolesMailTo, string Subject, string Body, object userState)
    {
        if ((this.SendMailEquifaxOperationCompleted == null))
        {
            this.SendMailEquifaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailEquifaxOperationCompleted);
        }
        this.InvokeAsync("SendMailEquifax", new object[] {
                    portalID,
                    userName,
                    rolesMailTo,
                    Subject,
                    Body}, this.SendMailEquifaxOperationCompleted, userState);
    }

    private void OnSendMailEquifaxOperationCompleted(object arg)
    {
        if ((this.SendMailEquifaxCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SendMailEquifaxCompleted(this, new SendMailEquifaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/SendMail", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string SendMail(string portalID, string userName, string rolesMailTo, string Subject, string Body, string sendTo, string sendCC, string sendBC)
    {
        object[] results = this.Invoke("SendMail", new object[] {
                    portalID,
                    userName,
                    rolesMailTo,
                    Subject,
                    Body,
                    sendTo,
                    sendCC,
                    sendBC});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSendMail(string portalID, string userName, string rolesMailTo, string Subject, string Body, string sendTo, string sendCC, string sendBC, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SendMail", new object[] {
                    portalID,
                    userName,
                    rolesMailTo,
                    Subject,
                    Body,
                    sendTo,
                    sendCC,
                    sendBC}, callback, asyncState);
    }

    /// <remarks/>
    public string EndSendMail(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void SendMailAsync(string portalID, string userName, string rolesMailTo, string Subject, string Body, string sendTo, string sendCC, string sendBC)
    {
        this.SendMailAsync(portalID, userName, rolesMailTo, Subject, Body, sendTo, sendCC, sendBC, null);
    }

    /// <remarks/>
    public void SendMailAsync(string portalID, string userName, string rolesMailTo, string Subject, string Body, string sendTo, string sendCC, string sendBC, object userState)
    {
        if ((this.SendMailOperationCompleted == null))
        {
            this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
        }
        this.InvokeAsync("SendMail", new object[] {
                    portalID,
                    userName,
                    rolesMailTo,
                    Subject,
                    Body,
                    sendTo,
                    sendCC,
                    sendBC}, this.SendMailOperationCompleted, userState);
    }

    private void OnSendMailOperationCompleted(object arg)
    {
        if ((this.SendMailCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SendMailCompleted(this, new SendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/JsonTransUnion", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string JsonTransUnion(int portalid, string user, string doc, string pass, string country, string sujeto, string cedula)
    {
        object[] results = this.Invoke("JsonTransUnion", new object[] {
                    portalid,
                    user,
                    doc,
                    pass,
                    country,
                    sujeto,
                    cedula});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJsonTransUnion(int portalid, string user, string doc, string pass, string country, string sujeto, string cedula, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("JsonTransUnion", new object[] {
                    portalid,
                    user,
                    doc,
                    pass,
                    country,
                    sujeto,
                    cedula}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJsonTransUnion(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void JsonTransUnionAsync(int portalid, string user, string doc, string pass, string country, string sujeto, string cedula)
    {
        this.JsonTransUnionAsync(portalid, user, doc, pass, country, sujeto, cedula, null);
    }

    /// <remarks/>
    public void JsonTransUnionAsync(int portalid, string user, string doc, string pass, string country, string sujeto, string cedula, object userState)
    {
        if ((this.JsonTransUnionOperationCompleted == null))
        {
            this.JsonTransUnionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJsonTransUnionOperationCompleted);
        }
        this.InvokeAsync("JsonTransUnion", new object[] {
                    portalid,
                    user,
                    doc,
                    pass,
                    country,
                    sujeto,
                    cedula}, this.JsonTransUnionOperationCompleted, userState);
    }

    private void OnJsonTransUnionOperationCompleted(object arg)
    {
        if ((this.JsonTransUnionCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.JsonTransUnionCompleted(this, new JsonTransUnionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Get_Roles_Agenda", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode Get_Roles_Agenda(int portalid, string roleName)
    {
        object[] results = this.Invoke("Get_Roles_Agenda", new object[] {
                    portalid,
                    roleName});
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGet_Roles_Agenda(int portalid, string roleName, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Get_Roles_Agenda", new object[] {
                    portalid,
                    roleName}, callback, asyncState);
    }

    /// <remarks/>
    public System.Xml.XmlNode EndGet_Roles_Agenda(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }

    /// <remarks/>
    public void Get_Roles_AgendaAsync(int portalid, string roleName)
    {
        this.Get_Roles_AgendaAsync(portalid, roleName, null);
    }

    /// <remarks/>
    public void Get_Roles_AgendaAsync(int portalid, string roleName, object userState)
    {
        if ((this.Get_Roles_AgendaOperationCompleted == null))
        {
            this.Get_Roles_AgendaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Roles_AgendaOperationCompleted);
        }
        this.InvokeAsync("Get_Roles_Agenda", new object[] {
                    portalid,
                    roleName}, this.Get_Roles_AgendaOperationCompleted, userState);
    }

    private void OnGet_Roles_AgendaOperationCompleted(object arg)
    {
        if ((this.Get_Roles_AgendaCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Get_Roles_AgendaCompleted(this, new Get_Roles_AgendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Get_Roles_Agenda", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Get_Roles_Agenda(int portalid, string roleName)
    {
        object[] results = this.Invoke("Json_Get_Roles_Agenda", new object[] {
                    portalid,
                    roleName});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Get_Roles_Agenda(int portalid, string roleName, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Get_Roles_Agenda", new object[] {
                    portalid,
                    roleName}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Get_Roles_Agenda(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Get_Roles_AgendaAsync(int portalid, string roleName)
    {
        this.Json_Get_Roles_AgendaAsync(portalid, roleName, null);
    }

    /// <remarks/>
    public void Json_Get_Roles_AgendaAsync(int portalid, string roleName, object userState)
    {
        if ((this.Json_Get_Roles_AgendaOperationCompleted == null))
        {
            this.Json_Get_Roles_AgendaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Get_Roles_AgendaOperationCompleted);
        }
        this.InvokeAsync("Json_Get_Roles_Agenda", new object[] {
                    portalid,
                    roleName}, this.Json_Get_Roles_AgendaOperationCompleted, userState);
    }

    private void OnJson_Get_Roles_AgendaOperationCompleted(object arg)
    {
        if ((this.Json_Get_Roles_AgendaCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Get_Roles_AgendaCompleted(this, new Json_Get_Roles_AgendaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/generateJSONBuro", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string generateJSONBuro(int portalid, int userGPS, int gpsID, string userName, string roleName, string directory, string doc)
    {
        object[] results = this.Invoke("generateJSONBuro", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    userName,
                    roleName,
                    directory,
                    doc});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BegingenerateJSONBuro(int portalid, int userGPS, int gpsID, string userName, string roleName, string directory, string doc, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("generateJSONBuro", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    userName,
                    roleName,
                    directory,
                    doc}, callback, asyncState);
    }

    /// <remarks/>
    public string EndgenerateJSONBuro(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void generateJSONBuroAsync(int portalid, int userGPS, int gpsID, string userName, string roleName, string directory, string doc)
    {
        this.generateJSONBuroAsync(portalid, userGPS, gpsID, userName, roleName, directory, doc, null);
    }

    /// <remarks/>
    public void generateJSONBuroAsync(int portalid, int userGPS, int gpsID, string userName, string roleName, string directory, string doc, object userState)
    {
        if ((this.generateJSONBuroOperationCompleted == null))
        {
            this.generateJSONBuroOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateJSONBuroOperationCompleted);
        }
        this.InvokeAsync("generateJSONBuro", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    userName,
                    roleName,
                    directory,
                    doc}, this.generateJSONBuroOperationCompleted, userState);
    }

    private void OngenerateJSONBuroOperationCompleted(object arg)
    {
        if ((this.generateJSONBuroCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.generateJSONBuroCompleted(this, new generateJSONBuroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/CreateBuroFile", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string CreateBuroFile(int portalid, int userGPS, int gpsID, string json, string directory)
    {
        object[] results = this.Invoke("CreateBuroFile", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    json,
                    directory});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginCreateBuroFile(int portalid, int userGPS, int gpsID, string json, string directory, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("CreateBuroFile", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    json,
                    directory}, callback, asyncState);
    }

    /// <remarks/>
    public string EndCreateBuroFile(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void CreateBuroFileAsync(int portalid, int userGPS, int gpsID, string json, string directory)
    {
        this.CreateBuroFileAsync(portalid, userGPS, gpsID, json, directory, null);
    }

    /// <remarks/>
    public void CreateBuroFileAsync(int portalid, int userGPS, int gpsID, string json, string directory, object userState)
    {
        if ((this.CreateBuroFileOperationCompleted == null))
        {
            this.CreateBuroFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBuroFileOperationCompleted);
        }
        this.InvokeAsync("CreateBuroFile", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    json,
                    directory}, this.CreateBuroFileOperationCompleted, userState);
    }

    private void OnCreateBuroFileOperationCompleted(object arg)
    {
        if ((this.CreateBuroFileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateBuroFileCompleted(this, new CreateBuroFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_OpenBuroFile", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_OpenBuroFile(int portalid, int userGPS, int gpsID, string directory)
    {
        object[] results = this.Invoke("Json_OpenBuroFile", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    directory});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_OpenBuroFile(int portalid, int userGPS, int gpsID, string directory, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_OpenBuroFile", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    directory}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_OpenBuroFile(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_OpenBuroFileAsync(int portalid, int userGPS, int gpsID, string directory)
    {
        this.Json_OpenBuroFileAsync(portalid, userGPS, gpsID, directory, null);
    }

    /// <remarks/>
    public void Json_OpenBuroFileAsync(int portalid, int userGPS, int gpsID, string directory, object userState)
    {
        if ((this.Json_OpenBuroFileOperationCompleted == null))
        {
            this.Json_OpenBuroFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_OpenBuroFileOperationCompleted);
        }
        this.InvokeAsync("Json_OpenBuroFile", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    directory}, this.Json_OpenBuroFileOperationCompleted, userState);
    }

    private void OnJson_OpenBuroFileOperationCompleted(object arg)
    {
        if ((this.Json_OpenBuroFileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_OpenBuroFileCompleted(this, new Json_OpenBuroFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/OpenBuroFile", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
    public byte[] OpenBuroFile(int portalid, int userGPS, int gpsID, string directory)
    {
        object[] results = this.Invoke("OpenBuroFile", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    directory});
        return ((byte[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginOpenBuroFile(int portalid, int userGPS, int gpsID, string directory, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("OpenBuroFile", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    directory}, callback, asyncState);
    }

    /// <remarks/>
    public byte[] EndOpenBuroFile(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }

    /// <remarks/>
    public void OpenBuroFileAsync(int portalid, int userGPS, int gpsID, string directory)
    {
        this.OpenBuroFileAsync(portalid, userGPS, gpsID, directory, null);
    }

    /// <remarks/>
    public void OpenBuroFileAsync(int portalid, int userGPS, int gpsID, string directory, object userState)
    {
        if ((this.OpenBuroFileOperationCompleted == null))
        {
            this.OpenBuroFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenBuroFileOperationCompleted);
        }
        this.InvokeAsync("OpenBuroFile", new object[] {
                    portalid,
                    userGPS,
                    gpsID,
                    directory}, this.OpenBuroFileOperationCompleted, userState);
    }

    private void OnOpenBuroFileOperationCompleted(object arg)
    {
        if ((this.OpenBuroFileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.OpenBuroFileCompleted(this, new OpenBuroFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/Json_Update_Tasks_Comments", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Json_Update_Tasks_Comments(string portalid, string gpsID, string comments)
    {
        object[] results = this.Invoke("Json_Update_Tasks_Comments", new object[] {
                    portalid,
                    gpsID,
                    comments});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginJson_Update_Tasks_Comments(string portalid, string gpsID, string comments, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Json_Update_Tasks_Comments", new object[] {
                    portalid,
                    gpsID,
                    comments}, callback, asyncState);
    }

    /// <remarks/>
    public string EndJson_Update_Tasks_Comments(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Json_Update_Tasks_CommentsAsync(string portalid, string gpsID, string comments)
    {
        this.Json_Update_Tasks_CommentsAsync(portalid, gpsID, comments, null);
    }

    /// <remarks/>
    public void Json_Update_Tasks_CommentsAsync(string portalid, string gpsID, string comments, object userState)
    {
        if ((this.Json_Update_Tasks_CommentsOperationCompleted == null))
        {
            this.Json_Update_Tasks_CommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJson_Update_Tasks_CommentsOperationCompleted);
        }
        this.InvokeAsync("Json_Update_Tasks_Comments", new object[] {
                    portalid,
                    gpsID,
                    comments}, this.Json_Update_Tasks_CommentsOperationCompleted, userState);
    }

    private void OnJson_Update_Tasks_CommentsOperationCompleted(object arg)
    {
        if ((this.Json_Update_Tasks_CommentsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Json_Update_Tasks_CommentsCompleted(this, new Json_Update_Tasks_CommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Add_Photos", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Add_Photos(string portalid, string userGPS, string longitude, string latitude, string barcode, string href, string base64, string directory, string status)
    {
        object[] results = this.Invoke("GPS_Add_Photos", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    href,
                    base64,
                    directory,
                    status});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Add_Photos(string portalid, string userGPS, string longitude, string latitude, string barcode, string href, string base64, string directory, string status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Add_Photos", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    href,
                    base64,
                    directory,
                    status}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Add_Photos(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_Add_PhotosAsync(string portalid, string userGPS, string longitude, string latitude, string barcode, string href, string base64, string directory, string status)
    {
        this.GPS_Add_PhotosAsync(portalid, userGPS, longitude, latitude, barcode, href, base64, directory, status, null);
    }

    /// <remarks/>
    public void GPS_Add_PhotosAsync(string portalid, string userGPS, string longitude, string latitude, string barcode, string href, string base64, string directory, string status, object userState)
    {
        if ((this.GPS_Add_PhotosOperationCompleted == null))
        {
            this.GPS_Add_PhotosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Add_PhotosOperationCompleted);
        }
        this.InvokeAsync("GPS_Add_Photos", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    href,
                    base64,
                    directory,
                    status}, this.GPS_Add_PhotosOperationCompleted, userState);
    }

    private void OnGPS_Add_PhotosOperationCompleted(object arg)
    {
        if ((this.GPS_Add_PhotosCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Add_PhotosCompleted(this, new GPS_Add_PhotosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/ReadPicture", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ReadPicture(string FilePhoto)
    {
        object[] results = this.Invoke("ReadPicture", new object[] {
                    FilePhoto});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginReadPicture(string FilePhoto, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("ReadPicture", new object[] {
                    FilePhoto}, callback, asyncState);
    }

    /// <remarks/>
    public string EndReadPicture(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void ReadPictureAsync(string FilePhoto)
    {
        this.ReadPictureAsync(FilePhoto, null);
    }

    /// <remarks/>
    public void ReadPictureAsync(string FilePhoto, object userState)
    {
        if ((this.ReadPictureOperationCompleted == null))
        {
            this.ReadPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadPictureOperationCompleted);
        }
        this.InvokeAsync("ReadPicture", new object[] {
                    FilePhoto}, this.ReadPictureOperationCompleted, userState);
    }

    private void OnReadPictureOperationCompleted(object arg)
    {
        if ((this.ReadPictureCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadPictureCompleted(this, new ReadPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Add_WSQ", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Add_WSQ(string portalid, string userGPS, string longitude, string latitude, string barcode, string href, string base64, string directory, string status)
    {
        object[] results = this.Invoke("GPS_Add_WSQ", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    href,
                    base64,
                    directory,
                    status});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Add_WSQ(string portalid, string userGPS, string longitude, string latitude, string barcode, string href, string base64, string directory, string status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Add_WSQ", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    href,
                    base64,
                    directory,
                    status}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Add_WSQ(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_Add_WSQAsync(string portalid, string userGPS, string longitude, string latitude, string barcode, string href, string base64, string directory, string status)
    {
        this.GPS_Add_WSQAsync(portalid, userGPS, longitude, latitude, barcode, href, base64, directory, status, null);
    }

    /// <remarks/>
    public void GPS_Add_WSQAsync(string portalid, string userGPS, string longitude, string latitude, string barcode, string href, string base64, string directory, string status, object userState)
    {
        if ((this.GPS_Add_WSQOperationCompleted == null))
        {
            this.GPS_Add_WSQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Add_WSQOperationCompleted);
        }
        this.InvokeAsync("GPS_Add_WSQ", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    href,
                    base64,
                    directory,
                    status}, this.GPS_Add_WSQOperationCompleted, userState);
    }

    private void OnGPS_Add_WSQOperationCompleted(object arg)
    {
        if ((this.GPS_Add_WSQCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Add_WSQCompleted(this, new GPS_Add_WSQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prismsc.net/DesktopModules/ezMovilJsonp/GPS_Add_WSQ_FingersLR", RequestNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", ResponseNamespace = "http://prismsc.net/DesktopModules/ezMovilJsonp/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GPS_Add_WSQ_FingersLR(string portalid, string userGPS, string longitude, string latitude, string barcode, string hrefL, string hrefR, string base64L, string base64R, string directory, string status)
    {
        object[] results = this.Invoke("GPS_Add_WSQ_FingersLR", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    hrefL,
                    hrefR,
                    base64L,
                    base64R,
                    directory,
                    status});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGPS_Add_WSQ_FingersLR(string portalid, string userGPS, string longitude, string latitude, string barcode, string hrefL, string hrefR, string base64L, string base64R, string directory, string status, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GPS_Add_WSQ_FingersLR", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    hrefL,
                    hrefR,
                    base64L,
                    base64R,
                    directory,
                    status}, callback, asyncState);
    }

    /// <remarks/>
    public string EndGPS_Add_WSQ_FingersLR(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void GPS_Add_WSQ_FingersLRAsync(string portalid, string userGPS, string longitude, string latitude, string barcode, string hrefL, string hrefR, string base64L, string base64R, string directory, string status)
    {
        this.GPS_Add_WSQ_FingersLRAsync(portalid, userGPS, longitude, latitude, barcode, hrefL, hrefR, base64L, base64R, directory, status, null);
    }

    /// <remarks/>
    public void GPS_Add_WSQ_FingersLRAsync(string portalid, string userGPS, string longitude, string latitude, string barcode, string hrefL, string hrefR, string base64L, string base64R, string directory, string status, object userState)
    {
        if ((this.GPS_Add_WSQ_FingersLROperationCompleted == null))
        {
            this.GPS_Add_WSQ_FingersLROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGPS_Add_WSQ_FingersLROperationCompleted);
        }
        this.InvokeAsync("GPS_Add_WSQ_FingersLR", new object[] {
                    portalid,
                    userGPS,
                    longitude,
                    latitude,
                    barcode,
                    hrefL,
                    hrefR,
                    base64L,
                    base64R,
                    directory,
                    status}, this.GPS_Add_WSQ_FingersLROperationCompleted, userState);
    }

    private void OnGPS_Add_WSQ_FingersLROperationCompleted(object arg)
    {
        if ((this.GPS_Add_WSQ_FingersLRCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GPS_Add_WSQ_FingersLRCompleted(this, new GPS_Add_WSQ_FingersLRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void WriteWSQCompletedEventHandler(object sender, WriteWSQCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class WriteWSQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal WriteWSQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void WritePhotoHrefCompletedEventHandler(object sender, WritePhotoHrefCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class WritePhotoHrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal WritePhotoHrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Update_commentsbyGpsIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Href_GetbyGpsIDCompletedEventHandler(object sender, GPS_Href_GetbyGpsIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_Href_GetbyGpsIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_Href_GetbyGpsIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Add_DPICompletedEventHandler(object sender, GPS_Add_DPICompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_Add_DPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_Add_DPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GetPassCompletedEventHandler(object sender, GetPassCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_MediaTypeCompletedEventHandler(object sender, GPS_MediaTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_MediaTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_MediaTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_LoadImageCompletedEventHandler(object sender, Json_LoadImageCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_LoadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_LoadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Add_PNCCompletedEventHandler(object sender, GPS_Add_PNCCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_Add_PNCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_Add_PNCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TransImageStrPNCCompletedEventHandler(object sender, TransImageStrPNCCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransImageStrPNCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TransImageStrPNCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Get_DPICompletedEventHandler(object sender, Get_DPICompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Get_DPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Get_DPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void ezinfoCompletedEventHandler(object sender, ezinfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ezinfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ezinfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void chepeTePrestaCompletedEventHandler(object sender, chepeTePrestaCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class chepeTePrestaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal chepeTePrestaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Add_JSONPCompletedEventHandler(object sender, GPS_Add_JSONPCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_Add_JSONPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_Add_JSONPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_AddCompletedEventHandler(object sender, GPS_AddCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Add_XMLCompletedEventHandler(object sender, GPS_Add_XMLCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_Add_XMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_Add_XMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void JsonGPS_ListCompletedEventHandler(object sender, JsonGPS_ListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class JsonGPS_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal JsonGPS_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void JsonGPS_ListsCompletedEventHandler(object sender, JsonGPS_ListsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class JsonGPS_ListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal JsonGPS_ListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GetPasswordCompletedEventHandler(object sender, GetPasswordCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void JsonBuro_ListCompletedEventHandler(object sender, JsonBuro_ListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class JsonBuro_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal JsonBuro_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Buro_List_With_FileCompletedEventHandler(object sender, Buro_List_With_FileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Buro_List_With_FileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Buro_List_With_FileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Add_FinsolCompletedEventHandler(object sender, GPS_Add_FinsolCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_Add_FinsolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_Add_FinsolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Add_Finsol_GetLastRowCompletedEventHandler(object sender, GPS_Add_Finsol_GetLastRowCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_Add_Finsol_GetLastRowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_Add_Finsol_GetLastRowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Buro_Return_JsonXmlCompletedEventHandler(object sender, Buro_Return_JsonXmlCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Buro_Return_JsonXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Buro_Return_JsonXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void JsonGet_RolesCompletedEventHandler(object sender, JsonGet_RolesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class JsonGet_RolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal JsonGet_RolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void JsonGet_Get_ProfileCompletedEventHandler(object sender, JsonGet_Get_ProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class JsonGet_Get_ProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal JsonGet_Get_ProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Get_AgendaPlanCompletedEventHandler(object sender, Json_Get_AgendaPlanCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Get_AgendaPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Get_AgendaPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Get_AgendaPlanPagesCompletedEventHandler(object sender, Json_Get_AgendaPlanPagesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Get_AgendaPlanPagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Get_AgendaPlanPagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Update_AgendaPlanCompletedEventHandler(object sender, Json_Update_AgendaPlanCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Update_AgendaPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Update_AgendaPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_AddTasks_UpdatePlanCompletedEventHandler(object sender, Json_AddTasks_UpdatePlanCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_AddTasks_UpdatePlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_AddTasks_UpdatePlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Count_AgendaPlanCompletedEventHandler(object sender, Json_Count_AgendaPlanCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Count_AgendaPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Count_AgendaPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Get_TasksCompletedEventHandler(object sender, Json_Get_TasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Get_TasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Get_TasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Tasks_UpdateCompletedEventHandler(object sender, Json_Tasks_UpdateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Tasks_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Tasks_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Tasks_GetCompletedEventHandler(object sender, Json_Tasks_GetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Tasks_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Tasks_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Update_TasksCompletedEventHandler(object sender, Json_Update_TasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Update_TasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Update_TasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Get_CodeConversionCompletedEventHandler(object sender, Json_Get_CodeConversionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Get_CodeConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Get_CodeConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Get_OCRCompletedEventHandler(object sender, Json_Get_OCRCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Get_OCRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Get_OCRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Update_Tasks_BuroCompletedEventHandler(object sender, Json_Update_Tasks_BuroCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Update_Tasks_BuroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Update_Tasks_BuroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TransReadImageBase64CompletedEventHandler(object sender, TransReadImageBase64CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransReadImageBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TransReadImageBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TransReadImageCompletedEventHandler(object sender, TransReadImageCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransReadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TransReadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public byte[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TransImageLocalCompletedEventHandler(object sender, TransImageLocalCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransImageLocalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TransImageLocalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TransImageParCompletedEventHandler(object sender, TransImageParCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransImageParCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TransImageParCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TransImageStrCompletedEventHandler(object sender, TransImageStrCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransImageStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TransImageStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TransImagebyteCompletedEventHandler(object sender, TransImagebyteCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransImagebyteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TransImagebyteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TransImageCompletedEventHandler(object sender, TransImageCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TransImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TransImageTypeCompletedEventHandler(object sender, TransImageTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransImageTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal TransImageTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Get_Last_Added_userGPSCompletedEventHandler(object sender, Get_Last_Added_userGPSCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Get_Last_Added_userGPSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Get_Last_Added_userGPSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void ListJPGCompletedEventHandler(object sender, ListJPGCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ListJPGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ListJPGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void SendMailEquifaxCompletedEventHandler(object sender, SendMailEquifaxCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendMailEquifaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SendMailEquifaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void SendMailCompletedEventHandler(object sender, SendMailCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void JsonTransUnionCompletedEventHandler(object sender, JsonTransUnionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class JsonTransUnionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal JsonTransUnionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Get_Roles_AgendaCompletedEventHandler(object sender, Get_Roles_AgendaCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Get_Roles_AgendaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Get_Roles_AgendaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public System.Xml.XmlNode Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlNode)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Get_Roles_AgendaCompletedEventHandler(object sender, Json_Get_Roles_AgendaCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Get_Roles_AgendaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Get_Roles_AgendaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void generateJSONBuroCompletedEventHandler(object sender, generateJSONBuroCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class generateJSONBuroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal generateJSONBuroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void CreateBuroFileCompletedEventHandler(object sender, CreateBuroFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateBuroFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal CreateBuroFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_OpenBuroFileCompletedEventHandler(object sender, Json_OpenBuroFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_OpenBuroFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_OpenBuroFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void OpenBuroFileCompletedEventHandler(object sender, OpenBuroFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class OpenBuroFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal OpenBuroFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public byte[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void Json_Update_Tasks_CommentsCompletedEventHandler(object sender, Json_Update_Tasks_CommentsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Json_Update_Tasks_CommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Json_Update_Tasks_CommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Add_PhotosCompletedEventHandler(object sender, GPS_Add_PhotosCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_Add_PhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_Add_PhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void ReadPictureCompletedEventHandler(object sender, ReadPictureCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal ReadPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Add_WSQCompletedEventHandler(object sender, GPS_Add_WSQCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_Add_WSQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_Add_WSQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void GPS_Add_WSQ_FingersLRCompletedEventHandler(object sender, GPS_Add_WSQ_FingersLRCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GPS_Add_WSQ_FingersLRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GPS_Add_WSQ_FingersLRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
